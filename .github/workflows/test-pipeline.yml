name: Comprehensive Test Pipeline

on:
  workflow_call:
    inputs:
      coverage-threshold:
        type: number
        default: 85

jobs:
  test-matrix:
    name: Test - ${{ matrix.suite }}
    strategy:
      matrix:
        suite:
          - unit
          - integration
          - property
          - fuzz
          - shell-compat
        include:
          - suite: unit
            timeout: 10
          - suite: integration
            timeout: 20
          - suite: property
            timeout: 30
          - suite: fuzz
            timeout: 60
          - suite: shell-compat
            timeout: 15
    runs-on: ubuntu-22.04
    timeout-minutes: ${{ matrix.timeout }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview

      - name: Install nightly toolchain for fuzzing
        if: matrix.suite == 'fuzz'
        uses: dtolnay/rust-toolchain@nightly

      - name: Restore cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: ". -> target"
          shared-key: "ci-${{ runner.os }}"
          save-if: false

      - name: Setup test environment
        run: |
          # Install test tools
          cargo install cargo-nextest cargo-llvm-cov || true
          
          # Install shells for compatibility testing
          if [[ "${{ matrix.suite }}" == "shell-compat" ]]; then
            sudo apt-get update
            sudo apt-get install -y dash ash ksh zsh busybox bc
          fi

          # Install fuzzing tools
          if [[ "${{ matrix.suite }}" == "fuzz" ]]; then
            cargo +nightly install cargo-fuzz || true
            # Create fuzz directories
            mkdir -p fuzz/seeds/ast
            echo "fn main() {}" > fuzz/seeds/ast/minimal.rs
          fi

      - name: Run ${{ matrix.suite }} tests
        run: |
          case "${{ matrix.suite }}" in
            unit)
              cargo nextest run --workspace --exclude '*integration*' || \
              cargo test --workspace --exclude '*integration*'
              ;;
            integration)
              cargo test --test '*integration*' -- --test-threads=1
              ;;
            property)
              cargo test property -- --test-threads=1 --nocapture || true
              ;;
            fuzz)
              # Run short fuzz tests for CI
              make fuzz FUZZ_DURATION=60 || true
              ;;
            shell-compat)
              make test-shells
              ;;
          esac

      - name: Generate coverage report
        if: matrix.suite == 'unit'
        run: |
          cargo llvm-cov test --workspace \
            --codecov \
            --output-path coverage.json || true
          cargo llvm-cov report --html --output-dir coverage-html || true

      - name: Check coverage threshold
        if: matrix.suite == 'unit'
        run: |
          if command -v cargo-llvm-cov >/dev/null 2>&1; then
            cargo llvm-cov report --summary-only | tee coverage-summary.txt
            ./scripts/check-coverage.sh ${{ inputs.coverage-threshold }} || true
          fi

      - name: Upload coverage report
        if: matrix.suite == 'unit'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: |
            coverage.json
            coverage-html/
            coverage-summary.txt

      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.suite }}
          path: |
            target/nextest/
            target/test/
            fuzz/artifacts/

  test-summary:
    name: Test Summary
    needs: test-matrix
    runs-on: ubuntu-22.04
    if: always()
    steps:
      - name: Check test results
        run: |
          if [[ "${{ needs.test-matrix.result }}" == "success" ]]; then
            echo "✅ All tests passed!"
          else
            echo "❌ Some tests failed"
            exit 1
          fi