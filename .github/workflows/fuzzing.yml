name: Continuous Fuzzing

on:
  schedule:
    - cron: '0 */12 * * *'  # Every 12 hours
  workflow_dispatch:
  pull_request:
    paths:
      - 'rash/src/**'
      - 'fuzz/**'

jobs:
  proptest-fuzz:
    name: Property-Based Fuzzing
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Run property-based fuzzing (extensive)
        run: |
          env PROPTEST_CASES=2000 cargo test prop_ --lib
        timeout-minutes: 20

      - name: Upload failures
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: proptest-failures
          path: |
            proptest-regressions/
            target/debug/deps/*.profraw
          retention-days: 30

  quick-fuzz:
    name: Quick Fuzzing (PR)
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Quick fuzzing smoke test
        run: |
          env PROPTEST_CASES=500 cargo test prop_ --lib
        timeout-minutes: 5

  # cargo-fuzz requires system dependencies (libstdc++)
  # Uncomment when CI environment has required packages
  #
  # cargo-fuzz:
  #   name: Coverage-Guided Fuzzing
  #   runs-on: ubuntu-latest
  #   if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
  #
  #   strategy:
  #     matrix:
  #       target: [transpile_robustness, injection_detection]
  #
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #
  #     - name: Install Rust nightly
  #       uses: dtolnay/rust-toolchain@nightly
  #
  #     - name: Install system dependencies
  #       run: |
  #         sudo apt-get update
  #         sudo apt-get install -y clang libstdc++-dev
  #
  #     - name: Install cargo-fuzz
  #       run: cargo install cargo-fuzz
  #
  #     - name: Run fuzzing campaign
  #       run: |
  #         cargo fuzz run ${{ matrix.target }} -- \
  #           -max_total_time=1800 \
  #           -dict=fuzz/rust_keywords.dict \
  #           -max_len=8192
  #       timeout-minutes: 35
  #
  #     - name: Upload crashes
  #       if: failure()
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: fuzz-crashes-${{ matrix.target }}
  #         path: fuzz/artifacts/${{ matrix.target }}/
  #         retention-days: 90

  fuzzing-summary:
    name: Fuzzing Summary
    runs-on: ubuntu-latest
    needs: [proptest-fuzz]
    if: always()

    steps:
      - name: Post summary
        run: |
          echo "## Fuzzing Campaign Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Property Tests**: 60 properties Ã— 2,000 cases = 120,000 executions" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: ${{ needs.proptest-fuzz.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Infrastructure**: cargo-fuzz ready (requires system deps)" >> $GITHUB_STEP_SUMMARY
