var searchIndex = new Map(JSON.parse('[["quality_dashboard",{"t":"HHHH","n":["count_files","count_lines_of_code","count_tests","main"],"q":[[0,"quality_dashboard"],[4,"core::error"],[5,"alloc::boxed"],[6,"core::result"]],"i":"````","f":"{{}b}00{{}{{j{d{h{f}}}}}}","D":"`","p":[[1,"usize"],[1,"unit"],[10,"Error",4],[5,"Box",5,null,1],[6,"Result",6,null,1]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAQAEAAAAAAAAQACAAMABAA=","P":[]}],["quality_gate",{"t":"FFFFNNNNNNNNONNNNOOOONNNNNNNNHOONNNNNNNNNNNN","n":["ComplexityReport","DeadCodeFile","DeadCodeReport","FileComplexity","borrow","","","","borrow_mut","","","","dead_code_count","deserialize","","","","file_path","","files","","from","","","","into","","","","main","max_cognitive","max_cyclomatic","try_from","","","","try_into","","","","type_id","","",""],"q":[[0,"quality_gate"],[44,"core::result"],[45,"serde::de"],[46,"alloc::string"],[47,"alloc::vec"],[48,"core::error"],[49,"alloc::boxed"],[50,"core::any"]],"i":"````jA`Abf321003210203132103210`22321032103210","f":"````{b{{b{c}}}{}}000{{{b{d}}}{{b{dc}}}{}}000{fh}{c{{l{j}}}n}{c{{l{A`}}}n}{c{{l{Ab}}}n}{c{{l{f}}}n}{A`Ad}{fAd}{jAf}{AbAf}{cc{}}000{{}c{}}000{{}{{l{Ah{Al{Aj}}}}}}{A`h}0{c{{l{e}}}{}{}}000{{}{{l{c}}}{}}000{bAn}000","D":"A`","p":[[1,"reference",null,null,1],[0,"mut"],[5,"DeadCodeFile",0],[1,"u32"],[5,"ComplexityReport",0],[6,"Result",44,null,1],[10,"Deserializer",45],[5,"FileComplexity",0],[5,"DeadCodeReport",0],[5,"String",46],[5,"Vec",47],[1,"unit"],[10,"Error",48],[5,"Box",49,null,1],[5,"TypeId",50]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACQAAgAAABUAHgAOAA==","P":[[4,"T"],[12,""],[13,"__D"],[17,""],[21,"T"],[25,"U"],[29,""],[32,"U,T"],[36,"U"],[40,""]]}],["rash",{"t":"EEECHCCCCCHCEEEEECHCPPPPGPPPPPPPGPPFPPPPPPPGPPPPFPPPPPPPFGFPPGPPPPPPGPPPGPPPPNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOKKHHHMMMMMMMMHEECCEPPFGPPNNNNNNNNNONNNNNNNNNNNONNNNNNNNNNOOOOOOOOOOOHHHHHHHEHCCHHHHHHFNNONNNNNNNNNNNNNNNEEEFEENNNHNNNNNCHNHNNHCHNNNGFPPPPPPPNHNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNPFPPPPPPPPGGPPNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNOOOOOOOOOOEEEEECCPPPFPPPPGPGNNNNNNNNNNNNNNNNNNNONNNNNNNNNONNNONNNNNNNNNNNNNNNNOPPGPPPPPPPIPPNNNNNNNNNNNNNNNECHHHHHHHHHCHHHHHHHHHHHHHHHHHH","n":["Config","Error","Result","ast","check","cli","emitter","ir","models","services","transpile","verifier","Expr","Function","RestrictedAst","Stmt","Type","restricted","validate","visitor","Add","And","Array","Binary","BinaryOp","Block","Bool","","Break","Continue","Div","Eq","Expr","","For","Function","FunctionCall","Ge","Gt","If","Index","Le","Let","Literal","","","Lt","Match","MatchArm","MethodCall","Mul","Ne","Neg","Not","Option","Or","Parameter","Pattern","RestrictedAst","Result","Return","Stmt","Str","","Struct","Sub","Try","Tuple","Type","U32","","Unary","UnaryOp","Variable","","While","Wildcard","binds_variable","body","","borrow","","","","","","","","","","","borrow_mut","","","","","","","","","","","check_no_recursion","clone","","","","","","","","","","","clone_into","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","collect_function_calls","","","deserialize","","","","","","","","","","","entry_point","eq","fmt","","","","","","","","","","","from","","","","","","","","","","","functions","guard","has_cycle","into","","","","","","","","","","","is_allowed","name","","param_type","params","pattern","return_type","serialize","","","","","","","","","","","to_owned","","","","","","","","","","","try_from","","","","","","","","","","","try_into","","","","","","","","","","","type_id","","","","","","","","","","","validate","","","","","args","","expr","index","left","method","name","object","op","","operand","receiver","right","fields","name","arms","body","","condition","","else_block","iter","max_iterations","","name","pattern","scrutinee","then_block","value","err_type","inner_type","ok_type","Visitor","VisitorMut","transform_expr","transform_exprs","transform_stmt_exprs","visit_ast","visit_ast_mut","visit_expr","visit_expr_mut","visit_function","visit_function_mut","visit_stmt","visit_stmt_mut","walk_ast","Cli","Commands","args","commands","execute_command","Build","Check","Cli","Commands","Init","Verify","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","","borrow_mut","","command","","command_for_update","from","","from_arg_matches","","from_arg_matches_mut","","group_id","has_subcommand","into","","target","try_from","","try_into","","type_id","","update_from_arg_matches","","update_from_arg_matches_mut","","verbose","verify","emit_proof","input","","name","no_optimize","output","path","rust_source","shell_script","build_command","check_command","execute_command","generate_proof","init_command","normalize_shell_script","verify_command","PosixEmitter","emit","escape","posix","escape_command_name","escape_shell_string","escape_variable_name","is_safe_command_name","is_safe_unquoted","is_valid_shell_identifier","PosixEmitter","borrow","borrow_mut","config","emit","emit_command","emit_ir","emit_shell_value","emit_test_expression","from","into","needs_runtime","new","try_from","try_into","type_id","write_footer","write_header","write_runtime","Command","Effect","EffectSet","IrConverter","ShellIR","ShellValue","analyze_command_effects","borrow","borrow_mut","constant_fold","convert","convert_expr","convert_expr_to_value","convert_stmt","convert_stmts","effects","eliminate_dead_code","from","from_ast","into","new","optimize","shell_ir","transform_ir","try_from","try_into","type_id","Effect","EffectSet","EnvRead","FileRead","FileWrite","NetworkAccess","ProcessExec","Pure","SystemModification","add","analyze_command_effects","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","contains","default","deserialize","","effects","eq","fmt","","from","","","","has_filesystem_effects","has_network_effects","has_system_effects","hash","into","","is_pure","is_subset_of","pure","serialize","","single","to_owned","","to_vec","try_from","","try_into","","type_id","","union","Bool","Command","CommandSubst","Concat","Exec","Exit","If","Let","Noop","Sequence","ShellIR","ShellValue","String","Variable","arg","args","","as_constant_string","borrow","","","borrow_mut","","","clone","","","clone_into","","","clone_to_uninit","","","deserialize","","","effects","fmt","","","from","","","into","","","is_constant","is_pure","new","program","serialize","","","to_owned","","","try_from","","","try_into","","","type_id","","","cmd","code","effects","","else_branch","message","name","test","then_branch","value","Config","Error","Result","ShellDialect","VerificationLevel","config","error","Ash","Bash","Basic","Config","Dash","None","Paranoid","Posix","ShellDialect","Strict","VerificationLevel","borrow","","","borrow_mut","","","clone","","","clone_into","","","clone_to_uninit","","","default","deserialize","","","emit_proof","fmt","","","from","","","into","","","optimize","serialize","","","target","to_owned","","","to_possible_value","","try_from","","","try_into","","","type_id","","","value_variants","","verify","Emission","Err","Error","Format","Internal","Io","IrGeneration","Json","Ok","Parse","Result","Validation","Verification","borrow","borrow_mut","fmt","","from","","","","","into","source","to_string","try_from","try_into","type_id","parse","parser","convert_binary_op","convert_block","convert_expr","convert_function","convert_literal","convert_stmt","convert_type","convert_unary_op","parse","properties","verify","verify_basic","verify_paranoid","verify_strict","check_command_safety","check_has_idempotency_guard","check_value_safety","contains_shell_metacharacters","is_dangerous_command","is_file_operation","is_network_command","is_nondeterministic_command","requires_idempotency_check","verify_deterministic","verify_idempotency","verify_no_command_injection","verify_resource_safety","walk_ir"],"q":[[0,"rash"],[12,"rash::ast"],[20,"rash::ast::restricted"],[255,"rash::ast::restricted::Expr"],[268,"rash::ast::restricted::Pattern"],[270,"rash::ast::restricted::Stmt"],[284,"rash::ast::restricted::Type"],[287,"rash::ast::visitor"],[301,"rash::cli"],[306,"rash::cli::args"],[346,"rash::cli::args::Commands"],[355,"rash::cli::commands"],[362,"rash::emitter"],[366,"rash::emitter::escape"],[372,"rash::emitter::posix"],[391,"rash::ir"],[418,"rash::ir::effects"],[473,"rash::ir::shell_ir"],[538,"rash::ir::shell_ir::ShellIR"],[548,"rash::models"],[555,"rash::models::config"],[617,"rash::models::error"],[645,"rash::services"],[647,"rash::services::parser"],[656,"rash::verifier"],[661,"rash::verifier::properties"],[675,"alloc::string"],[676,"alloc::vec"],[677,"core::result"],[678,"serde::de"],[679,"core::fmt"],[680,"core::option"],[681,"std::collections::hash::map"],[682,"std::collections::hash::set"],[683,"serde::ser"],[684,"core::any"],[685,"alloc::boxed"],[686,"core::ops::function"],[687,"core::default"],[688,"clap_builder::builder::command"],[689,"clap_builder::parser::matches::arg_matches"],[690,"clap_builder"],[691,"clap_builder::util::id"],[692,"std::path"],[693,"core::hash"],[694,"core::convert"],[695,"clap_builder::builder::possible_value"],[696,"serde_json::error"],[697,"std::io::error"],[698,"syn::error"],[699,"core::error"],[700,"syn::op"],[701,"syn::stmt"],[702,"syn::expr"],[703,"syn::item"],[704,"syn::lit"],[705,"syn::ty"]],"i":"````````````````````Bh0Bd0`0B`BfBb044`00`3440340`3A`51`455Bj046```42`431651`435`51211AdAhn2An8697:4251308697:42511308697:4251308697:4251308697:4253691308697:425171308697:4251308697:4251211308697:42583003231308697:4251308697:4251308697:4251308697:4251308697:42513695CnD`DbDfDh3410Dj041Dl0DnE`EbEd10221Ef3410EhEj1`````EnF`101010``````Fh0``00Ff011010100001010101010010101010100Gd0GhGj220Gl0``````````````````Hb00000000000000000``````Hj00`00000``0`00```000``Ib000000Hl`10101010100010011010000001100001001001010100Hh`00H`00000``11Hd00210210210210210210211021021022100102102102102102IhIjIl2In21001```````G`0Gb`1001`0`j21021021021021002100210210210021002121021021021210Jbh`1111101`11111111111111111``````````````````````````````","f":"````{{{d{b}}}{{h{f}}}}`````{{{d{b}}j}{{h{l}}}}```````{{{d{n}}}{{h{f}}}}``````````````````````````````````````````````````````````{{{d{A`}}{d{b}}}Ab}{AdAf}{AhAf}{d{{d{c}}}{}}0000000000{{{d{Aj}}}{{d{Ajc}}}{}}0000000000{{{d{n}}}{{Al{fl}}}}{{{d{n}}}n}{{{d{Ad}}}Ad}{{{d{An}}}An}{{{d{B`}}}B`}{{{d{Bb}}}Bb}{{{d{Bd}}}Bd}{{{d{Bf}}}Bf}{{{d{Bh}}}Bh}{{{d{Bj}}}Bj}{{{d{Ah}}}Ah}{{{d{A`}}}A`}{{d{d{Ajc}}}f{}}0000000000{{dBl}f}0000000000{{{d{Ad}}{d{Aj{Af{l}}}}}f}{{{d{Bb}}{d{Aj{Af{l}}}}}f}{{{d{Bd}}{d{Aj{Af{l}}}}}f}{c{{Al{n}}}Bn}{c{{Al{Ad}}}Bn}{c{{Al{An}}}Bn}{c{{Al{B`}}}Bn}{c{{Al{Bb}}}Bn}{c{{Al{Bd}}}Bn}{c{{Al{Bf}}}Bn}{c{{Al{Bh}}}Bn}{c{{Al{Bj}}}Bn}{c{{Al{Ah}}}Bn}{c{{Al{A`}}}Bn}{nl}{{{d{Bf}}{d{Bf}}}Ab}{{{d{n}}{d{AjC`}}}Cb}{{{d{Ad}}{d{AjC`}}}Cb}{{{d{An}}{d{AjC`}}}Cb}{{{d{B`}}{d{AjC`}}}Cb}{{{d{Bb}}{d{AjC`}}}Cb}{{{d{Bd}}{d{AjC`}}}Cb}{{{d{Bf}}{d{AjC`}}}Cb}{{{d{Bh}}{d{AjC`}}}Cb}{{{d{Bj}}{d{AjC`}}}Cb}{{{d{Ah}}{d{AjC`}}}Cb}{{{d{A`}}{d{AjC`}}}Cb}{cc{}}0000000000{nAf}{AhCd}{{{d{n}}{d{{Cf{l{Af{l}}}}}}{d{b}}{d{Aj{Ch{l}}}}{d{Aj{Ch{l}}}}}Ab}{{}c{}}0000000000{{{d{B`}}}Ab}{Adl}{Anl}{AnB`}{AdAf}{AhA`}{AdB`}{{{d{n}}c}AlCj}{{{d{Ad}}c}AlCj}{{{d{An}}c}AlCj}{{{d{B`}}c}AlCj}{{{d{Bb}}c}AlCj}{{{d{Bd}}c}AlCj}{{{d{Bf}}c}AlCj}{{{d{Bh}}c}AlCj}{{{d{Bj}}c}AlCj}{{{d{Ah}}c}AlCj}{{{d{A`}}c}AlCj}{dc{}}0000000000{c{{Al{e}}}{}{}}0000000000{{}{{Al{c}}}{}}0000000000{dCl}0000000000{{{d{n}}}{{Al{fl}}}}{{{d{Ad}}}{{Al{fl}}}}{{{d{Bb}}}{{Al{fl}}}}{{{d{Bd}}}{{Al{fl}}}}{{{d{A`}}}{{Al{fl}}}}{CnAf}{D`Af}{DbDd}{DfDd}{DhDd}{D`l}{Cnl}3{DhBh}{DjBj}{DjDd}{D`Dd}6{DlAf}{Dll}{DnAf}{E`Af}{EbAf}{EdBd}{EbBd}{EdCd}{E`Bd}{E`Cd}{EbCd}{Efl}{E`A`}{DnBd}{EdAf}{EfBd}{EhDd}{EjDd}1``{{{d{AjBd}}{d{Ajc}}}f{{El{{d{AjBd}}}}}}{{{d{Ajn}}c}f{{El{{d{AjBd}}}}}}{{{d{AjBb}}{d{Ajc}}}f{{El{{d{AjBd}}}}}}{{{d{AjEn}}{d{n}}}c{}}{{{d{AjF`}}{d{Ajn}}}c{}}{{{d{AjEn}}{d{Bd}}}c{}}{{{d{AjF`}}{d{AjBd}}}c{}}{{{d{AjEn}}{d{Ad}}}c{}}{{{d{AjF`}}{d{AjAd}}}c{}}{{{d{AjEn}}{d{Bb}}}c{}}{{{d{AjF`}}{d{AjBb}}}c{}}{{{d{Aje}}{d{n}}}cFb{{En{c}}}}```````````{FdFd}000{d{{d{c}}}{}}0{{{d{Aj}}}{{d{Ajc}}}{}}0{{}Fd}{FfFh}1{cc{}}0{{{d{Fj}}}{{Al{FfFl}}}}{{{d{Fj}}}{{Al{FhFl}}}}{{{d{AjFj}}}{{Al{FfFl}}}}{{{d{AjFj}}}{{Al{FhFl}}}}{{}{{Cd{Fn}}}}{{{d{b}}}Ab}{{}c{}}0{FfG`}{c{{Al{e}}}{}{}}0{{}{{Al{c}}}{}}0{dCl}0{{{d{AjFf}}{d{Fj}}}{{Al{fFl}}}}{{{d{AjFh}}{d{Fj}}}{{Al{fFl}}}}{{{d{AjFf}}{d{AjFj}}}{{Al{fFl}}}}{{{d{AjFh}}{d{AjFj}}}{{Al{fFl}}}}{FfAb}{FfGb}{GdAb}{GdGf}{GhGf}{GjCd}32{GjGf}{GlGf}0{{{d{Gn}}{d{Gn}}j}{{h{f}}}}{{{d{Gn}}}{{h{f}}}}{Ff{{h{f}}}}{{{d{b}}{d{Gn}}{d{j}}}{{h{f}}}}{{{d{Gn}}{Cd{{d{b}}}}}{{h{f}}}}{{{d{b}}}l}{{{d{Gn}}{d{Gn}}G`Gb}{{h{f}}}}`{{{d{H`}}{d{j}}}{{h{l}}}}``222{{{d{b}}}Ab}00`{d{{d{c}}}{}}{{{d{Aj}}}{{d{Ajc}}}{}}{Hbj}{{{d{Hb}}{d{H`}}}{{h{l}}}}{{{d{Hb}}{d{Hd}}}{{h{l}}}}{{{d{Hb}}{d{Ajl}}{d{H`}}Hf}{{h{f}}}}{{{d{Hb}}{d{Hh}}}{{h{l}}}}0{cc{}}{{}c{}}{{{d{Hb}}}Ab}{jHb}{c{{Al{e}}}{}{}}{{}{{Al{c}}}{}}{dCl}{{{d{Hb}}{d{Ajl}}}{{h{f}}}}00``````{{{d{Hj}}{d{b}}}Hl}?>{H`H`}{{{d{Hj}}{d{n}}}{{h{H`}}}}{{{d{Hj}}{d{Bd}}}{{h{H`}}}}{{{d{Hj}}{d{Bd}}}{{h{Hh}}}}{{{d{Hj}}{d{Bb}}}{{h{H`}}}}{{{d{Hj}}{d{{Hn{Bb}}}}}{{h{H`}}}}`5>{{{d{n}}}{{h{H`}}}}>{{}Hj}{{H`{d{j}}}{{h{H`}}}}`{{H`{d{Ajc}}}H`{{El{H`}{{I`{H`}}}}}}>=<`````````{{{d{AjHl}}Ib}f}{{{d{b}}}Hl}{d{{d{c}}}{}}0{{{d{Aj}}}{{d{Ajc}}}{}}0{{{d{Ib}}}Ib}{{{d{Hl}}}Hl}{{d{d{Ajc}}}f{}}0{{dBl}f}0{{{d{Hl}}{d{Ib}}}Ab}{{}Hl}{c{{Al{Ib}}}Bn}{c{{Al{Hl}}}Bn}{HlCh}{{{d{Ib}}{d{Ib}}}Ab}{{{d{Ib}}{d{AjC`}}}Cb}{{{d{Hl}}{d{AjC`}}}Cb}{cc{}}{{{Af{Ib}}}Hl}{IbHl}2{{{d{Hl}}}Ab}00{{{d{Ib}}{d{Ajc}}}fId}{{}c{}}02{{{d{Hl}}{d{Hl}}}Ab}={{{d{Ib}}c}AlCj}{{{d{Hl}}c}AlCj}6{dc{}}0{{{d{Hl}}}{{Af{Ib}}}}{c{{Al{e}}}{}{}}0{{}{{Al{c}}}{}}0{dCl}0{{{d{Hl}}{d{Hl}}}Hl}``````````````{{HdHh}Hd}{{Hd{Af{Hh}}}Hd}{HdAf}{{{d{Hh}}}{{Cd{l}}}}{d{{d{c}}}{}}00{{{d{Aj}}}{{d{Ajc}}}{}}00{{{d{H`}}}H`}{{{d{Hd}}}Hd}{{{d{Hh}}}Hh}{{d{d{Ajc}}}f{}}00{{dBl}f}00{c{{Al{H`}}}Bn}{c{{Al{Hd}}}Bn}{c{{Al{Hh}}}Bn}{{{d{H`}}}Hl}{{{d{H`}}{d{AjC`}}}Cb}{{{d{Hd}}{d{AjC`}}}Cb}{{{d{Hh}}{d{AjC`}}}Cb}{cc{}}00{{}c{}}00{{{d{Hh}}}Ab}{{{d{H`}}}Ab}{cHd{{If{l}}}}{Hdl}{{{d{H`}}c}AlCj}{{{d{Hd}}c}AlCj}{{{d{Hh}}c}AlCj}{dc{}}00{c{{Al{e}}}{}{}}00{{}{{Al{c}}}{}}00{dCl}00{IhHd}{IjBl}{IlHl}{IhHl}{InCd}{IjCd}{Ill}{InHh}{InDd}{IlHh}``````````````````{d{{d{c}}}{}}00{{{d{Aj}}}{{d{Ajc}}}{}}00{{{d{j}}}j}{{{d{G`}}}G`}{{{d{Gb}}}Gb}{{d{d{Ajc}}}f{}}00{{dBl}f}00{{}j}{c{{Al{j}}}Bn}{c{{Al{G`}}}Bn}{c{{Al{Gb}}}Bn}{jAb}{{{d{j}}{d{AjC`}}}Cb}{{{d{G`}}{d{AjC`}}}Cb}{{{d{Gb}}{d{AjC`}}}Cb}{cc{}}00{{}c{}}005{{{d{j}}c}AlCj}{{{d{G`}}c}AlCj}{{{d{Gb}}c}AlCj}{jG`}{dc{}}00{{{d{G`}}}{{Cd{J`}}}}{{{d{Gb}}}{{Cd{J`}}}}{c{{Al{e}}}{}{}}00{{}{{Al{c}}}{}}00{dCl}00{{}{{d{{Hn{G`}}}}}}{{}{{d{{Hn{Gb}}}}}}{jGb}`````````````{d{{d{c}}}{}}{{{d{Aj}}}{{d{Ajc}}}{}}{{{d{Jb}}{d{AjC`}}}Cb}0{JdJb}{cc{}}{JfJb}{JhJb}{JjJb}{{}c{}}{{{d{Jb}}}{{Cd{{d{Jl}}}}}}{dl}{c{{Al{e}}}{}{}}{{}{{Al{c}}}{}}{dCl}``{{{d{Jn}}}{{h{Bh}}}}{{{d{K`}}}{{h{{Af{Bb}}}}}}{{{d{Kb}}}{{h{Bd}}}}{Kd{{h{Ad}}}}{{{d{Kf}}}{{h{Bf}}}}{{{d{Kh}}}{{h{Bb}}}}{{{d{Kj}}}{{h{B`}}}}{{{d{Kl}}}{{h{Bj}}}}{{{d{b}}}{{h{n}}}}`{{{d{H`}}Gb}{{h{f}}}}{{{d{H`}}}{{h{f}}}}00{{{d{Hd}}}{{h{f}}}}{{{d{H`}}{d{Hd}}}{{h{f}}}}{{{d{Hh}}}{{h{f}}}}{{{d{b}}}Ab}000004444{{{d{H`}}{d{Ajc}}}{{h{f}}}{{El{{d{H`}}}{{I`{{h{f}}}}}}}}","D":"O`","p":[[1,"str"],[1,"reference",null,null,1],[1,"unit"],[8,"Result",617],[5,"Config",555],[5,"String",675],[5,"RestrictedAst",20],[6,"Pattern",20],[1,"bool"],[5,"Function",20],[5,"Vec",676],[5,"MatchArm",20],[0,"mut"],[6,"Result",677,null,1],[5,"Parameter",20],[6,"Type",20],[6,"Stmt",20],[6,"Expr",20],[6,"Literal",20],[6,"BinaryOp",20],[6,"UnaryOp",20],[1,"u8"],[10,"Deserializer",678],[5,"Formatter",679],[8,"Result",679],[6,"Option",680,null,1],[5,"HashMap",681],[5,"HashSet",682],[10,"Serializer",683],[5,"TypeId",684],[15,"FunctionCall",255],[15,"MethodCall",255],[15,"Try",255],[5,"Box",685,null,1],[15,"Index",255],[15,"Binary",255],[15,"Unary",255],[15,"Struct",268],[15,"Match",270],[15,"For",270],[15,"While",270],[15,"If",270],[15,"Let",270],[15,"Result",284],[15,"Option",284],[10,"FnMut",686],[10,"Visitor",287],[10,"VisitorMut",287],[10,"Default",687],[5,"Command",688],[5,"Cli",306],[6,"Commands",306],[5,"ArgMatches",689],[8,"Error",690],[5,"Id",691],[6,"ShellDialect",555],[6,"VerificationLevel",555],[15,"Build",346],[5,"PathBuf",692],[15,"Check",346],[15,"Init",346],[15,"Verify",346],[5,"Path",692],[6,"ShellIR",473],[5,"PosixEmitter",372],[5,"Command",473],[1,"usize"],[6,"ShellValue",473],[5,"IrConverter",391],[5,"EffectSet",418],[1,"slice"],[17,"Output"],[6,"Effect",418],[10,"Hasher",693],[10,"Into",694,null,1],[15,"Exec",538],[15,"Exit",538],[15,"Let",538],[15,"If",538],[5,"PossibleValue",695],[6,"Error",617],[5,"Error",696],[5,"Error",697],[5,"Error",698],[5,"Error",679],[10,"Error",699],[6,"BinOp",700],[5,"Block",701],[6,"Expr",702],[5,"ItemFn",703],[6,"Lit",704],[6,"Stmt",701],[6,"Type",705],[6,"UnOp",700]],"r":[[0,555],[1,617],[2,617],[12,20],[13,20],[14,20],[15,20],[16,20],[301,306],[302,306],[305,355],[362,372],[391,473],[392,418],[393,418],[395,473],[396,473],[548,555],[549,617],[550,617],[551,555],[552,555],[645,647]],"b":[[448,"impl-From%3CVec%3CEffect%3E%3E-for-EffectSet"],[449,"impl-From%3CEffect%3E-for-EffectSet"],[632,"impl-Debug-for-Error"],[633,"impl-Display-for-Error"],[634,"impl-From%3CError%3E-for-Error"],[636,"impl-From%3CError%3E-for-Error"],[637,"impl-From%3CError%3E-for-Error"],[638,"impl-From%3CError%3E-for-Error"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACsCJwAAAAQABgAEAAwABgAUAI8ArwACAL0AZQAkAQgALgEEADUBAQA5AQoARgEFAE8BCQBkAQcAbQEBAHUBCACAARgAnAEAAJ4BBgCuAQkAuQEGAMEBAQDHAQAAzQEBANABAQDTAQUA2wEAAOQBAQDoAQIA7AERAP8BAgAKAkMAVAIWAGwCBQBzAggAfQICAIECDgCRAgAAkwILAKMCAAA=","P":[[80,"T"],[102,""],[114,"T"],[125,""],[139,"__D"],[150,""],[163,"T"],[174,""],[177,"U"],[188,""],[195,"__S"],[206,"T"],[217,"U,T"],[228,"U"],[239,""],[289,"F"],[292,"T"],[300,"T,V"],[312,""],[316,"T"],[320,""],[323,"T"],[325,""],[331,"U"],[333,""],[334,"U,T"],[336,"U"],[338,""],[373,"T"],[375,""],[381,"T"],[382,"U"],[383,""],[385,"U,T"],[386,"U"],[387,""],[398,"T"],[400,""],[408,"T"],[409,""],[410,"U"],[411,""],[414,"F"],[415,"U,T"],[416,"U"],[417,""],[429,"T"],[433,""],[435,"T"],[437,""],[441,"__D"],[443,""],[447,"T"],[448,""],[450,"T"],[451,""],[454,"__H"],[455,"U"],[457,""],[460,"__S"],[462,""],[463,"T"],[465,""],[466,"U,T"],[468,"U"],[470,""],[491,"T"],[497,""],[500,"T"],[503,""],[506,"__D"],[509,""],[513,"T"],[516,"U"],[519,""],[521,""],[522,""],[523,"__S"],[526,"T"],[529,"U,T"],[532,"U"],[535,""],[566,"T"],[572,""],[575,"T"],[578,""],[582,"__D"],[585,""],[589,"T"],[592,"U"],[595,""],[596,"__S"],[599,""],[600,"T"],[603,""],[605,"U,T"],[608,"U"],[611,""],[630,"T"],[632,""],[635,"T"],[636,""],[639,"U"],[640,""],[642,"U,T"],[643,"U"],[644,""],[674,"F"]]}],["rash",{"t":"EEECHCCCCCHCEEEEECHCPPPPGPPPPPPPGPPFPPPPPPPGPPPPFPPPPPPPFGFPPGPPPPPPGPPPGPPPPNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOKKHMMMMMMMMHEECCEPPFGPPNNNNNNNNNONNNNNNNNNNNONNNNNNNNNNOOOOOOOOOOOHEHCCHHHFNNNNNNNNNNNEEEEECHHCGFPPPPPPPNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPFPPPPPPPPGGPPNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNOOOOOOOOOOEEEEECCPPPFPPPPGPGNNNNNNNNNNNNNNNNNNNONNNNNNNNNONNNONNNNNNNNNNNNNNNNOPPGPPPPPPPIPPNNNNNNNNNNNNNNNECHCHHHHH","n":["Config","Error","Result","ast","check","cli","emitter","ir","models","services","transpile","verifier","Expr","Function","RestrictedAst","Stmt","Type","restricted","validate","visitor","Add","And","Array","Binary","BinaryOp","Block","Bool","","Break","Continue","Div","Eq","Expr","","For","Function","FunctionCall","Ge","Gt","If","Index","Le","Let","Literal","","","Lt","Match","MatchArm","MethodCall","Mul","Ne","Neg","Not","Option","Or","Parameter","Pattern","RestrictedAst","Result","Return","Stmt","Str","","Struct","Sub","Try","Tuple","Type","U32","","Unary","UnaryOp","Variable","","While","Wildcard","binds_variable","body","","borrow","","","","","","","","","","","borrow_mut","","","","","","","","","","","clone","","","","","","","","","","","clone_into","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","collect_function_calls","","","deserialize","","","","","","","","","","","entry_point","eq","fmt","","","","","","","","","","","from","","","","","","","","","","","functions","guard","into","","","","","","","","","","","is_allowed","name","","param_type","params","pattern","return_type","serialize","","","","","","","","","","","to_owned","","","","","","","","","","","try_from","","","","","","","","","","","try_into","","","","","","","","","","","type_id","","","","","","","","","","","validate","","","","","args","","expr","index","left","method","name","object","op","","operand","receiver","right","fields","name","arms","body","","condition","","else_block","iter","max_iterations","","name","pattern","scrutinee","then_block","value","err_type","inner_type","ok_type","Visitor","VisitorMut","transform_exprs","visit_ast","visit_ast_mut","visit_expr","visit_expr_mut","visit_function","visit_function_mut","visit_stmt","visit_stmt_mut","walk_ast","Cli","Commands","args","commands","execute_command","Build","Check","Cli","Commands","Init","Verify","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","","borrow_mut","","command","","command_for_update","from","","from_arg_matches","","from_arg_matches_mut","","group_id","has_subcommand","into","","target","try_from","","try_into","","type_id","","update_from_arg_matches","","update_from_arg_matches_mut","","verbose","verify","emit_proof","input","","name","no_optimize","output","path","rust_source","shell_script","execute_command","PosixEmitter","emit","escape","posix","escape_command_name","escape_shell_string","escape_variable_name","PosixEmitter","borrow","borrow_mut","emit","emit_shell_value","emit_test_expression","from","into","new","try_from","try_into","type_id","Command","Effect","EffectSet","ShellIR","ShellValue","effects","from_ast","optimize","shell_ir","Effect","EffectSet","EnvRead","FileRead","FileWrite","NetworkAccess","ProcessExec","Pure","SystemModification","add","analyze_command_effects","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","contains","default","deserialize","","eq","fmt","","from","","","","has_filesystem_effects","has_network_effects","has_system_effects","hash","into","","is_pure","is_subset_of","pure","serialize","","single","to_owned","","to_vec","try_from","","try_into","","type_id","","union","Bool","Command","CommandSubst","Concat","Exec","Exit","If","Let","Noop","Sequence","ShellIR","ShellValue","String","Variable","arg","args","","as_constant_string","borrow","","","borrow_mut","","","clone","","","clone_into","","","clone_to_uninit","","","deserialize","","","effects","fmt","","","from","","","into","","","is_constant","is_pure","new","program","serialize","","","to_owned","","","try_from","","","try_into","","","type_id","","","cmd","code","effects","","else_branch","message","name","test","then_branch","value","Config","Error","Result","ShellDialect","VerificationLevel","config","error","Ash","Bash","Basic","Config","Dash","None","Paranoid","Posix","ShellDialect","Strict","VerificationLevel","borrow","","","borrow_mut","","","clone","","","clone_into","","","clone_to_uninit","","","default","deserialize","","","emit_proof","fmt","","","from","","","into","","","optimize","serialize","","","target","to_owned","","","to_possible_value","","try_from","","","try_into","","","type_id","","","value_variants","","verify","Emission","Err","Error","Format","Internal","Io","IrGeneration","Json","Ok","Parse","Result","Validation","Verification","borrow","borrow_mut","fmt","","from","","","","","into","source","to_string","try_from","try_into","type_id","parse","parser","parse","properties","verify","verify_deterministic","verify_idempotency","verify_no_command_injection","verify_resource_safety"],"q":[[0,"rash"],[12,"rash::ast"],[20,"rash::ast::restricted"],[253,"rash::ast::restricted::Expr"],[266,"rash::ast::restricted::Pattern"],[268,"rash::ast::restricted::Stmt"],[282,"rash::ast::restricted::Type"],[285,"rash::ast::visitor"],[297,"rash::cli"],[302,"rash::cli::args"],[342,"rash::cli::args::Commands"],[351,"rash::cli::commands"],[352,"rash::emitter"],[356,"rash::emitter::escape"],[359,"rash::emitter::posix"],[371,"rash::ir"],[380,"rash::ir::effects"],[434,"rash::ir::shell_ir"],[499,"rash::ir::shell_ir::ShellIR"],[509,"rash::models"],[516,"rash::models::config"],[578,"rash::models::error"],[606,"rash::services"],[608,"rash::services::parser"],[609,"rash::verifier"],[611,"rash::verifier::properties"],[615,"alloc::string"],[616,"alloc::vec"],[617,"core::result"],[618,"serde::de"],[619,"core::fmt"],[620,"core::option"],[621,"serde::ser"],[622,"core::any"],[623,"alloc::boxed"],[624,"core::ops::function"],[625,"core::default"],[626,"clap_builder::builder::command"],[627,"clap_builder::parser::matches::arg_matches"],[628,"clap_builder"],[629,"clap_builder::util::id"],[630,"std::path"],[631,"core::hash"],[632,"core::convert"],[633,"clap_builder::builder::possible_value"],[634,"serde_json::error"],[635,"std::io::error"],[636,"syn::error"],[637,"core::error"]],"i":"````````````````````Bf0Bb0`0AnBdB`044`00`3440340`3A`51`455Bh046```42`431651`435`51211AdAhn2Al8697:4251308697:4251308697:4251308697:4251308697:4253691308697:425171308697:4251308697:425121308697:42583003231308697:4251308697:4251308697:4251308697:4251308697:42513695CjClCnDbDd3410Df041Dh0DjDlDnE`10221Eb3410EdEf1```EjEl101010``````Fd0``00Fb011010100001010101010010101010100G`0GdGf220Gh0`````````Gl0000000000```````````Hb000000H``1010101010001011010000001100001001001010100Gn`00Gj00000``11Hf00210210210210210210211021021022100102102102102102HjHlHn2I`21001```````Fl0Fn`1001`0`j21021021021021002100210210210021002121021021021210Ifh`1111101`11111111111111111`````````","f":"````{{{d{b}}}{{h{f}}}}`````{{{d{b}}j}{{h{l}}}}```````{{{d{n}}}{{h{f}}}}``````````````````````````````````````````````````````````{{{d{A`}}{d{b}}}Ab}{AdAf}{AhAf}{d{{d{c}}}{}}0000000000{{{d{Aj}}}{{d{Ajc}}}{}}0000000000{{{d{n}}}n}{{{d{Ad}}}Ad}{{{d{Al}}}Al}{{{d{An}}}An}{{{d{B`}}}B`}{{{d{Bb}}}Bb}{{{d{Bd}}}Bd}{{{d{Bf}}}Bf}{{{d{Bh}}}Bh}{{{d{Ah}}}Ah}{{{d{A`}}}A`}{{d{d{Ajc}}}f{}}0000000000{{dBj}f}0000000000{{{d{Ad}}{d{Aj{Af{l}}}}}f}{{{d{B`}}{d{Aj{Af{l}}}}}f}{{{d{Bb}}{d{Aj{Af{l}}}}}f}{c{{Bl{n}}}Bn}{c{{Bl{Ad}}}Bn}{c{{Bl{Al}}}Bn}{c{{Bl{An}}}Bn}{c{{Bl{B`}}}Bn}{c{{Bl{Bb}}}Bn}{c{{Bl{Bd}}}Bn}{c{{Bl{Bf}}}Bn}{c{{Bl{Bh}}}Bn}{c{{Bl{Ah}}}Bn}{c{{Bl{A`}}}Bn}{nl}{{{d{Bd}}{d{Bd}}}Ab}{{{d{n}}{d{AjC`}}}Cb}{{{d{Ad}}{d{AjC`}}}Cb}{{{d{Al}}{d{AjC`}}}Cb}{{{d{An}}{d{AjC`}}}Cb}{{{d{B`}}{d{AjC`}}}Cb}{{{d{Bb}}{d{AjC`}}}Cb}{{{d{Bd}}{d{AjC`}}}Cb}{{{d{Bf}}{d{AjC`}}}Cb}{{{d{Bh}}{d{AjC`}}}Cb}{{{d{Ah}}{d{AjC`}}}Cb}{{{d{A`}}{d{AjC`}}}Cb}{cc{}}0000000000{nAf}{AhCd}{{}c{}}0000000000{{{d{An}}}Ab}{Adl}{All}{AlAn}{AdAf}{AhA`}{AdAn}{{{d{n}}c}BlCf}{{{d{Ad}}c}BlCf}{{{d{Al}}c}BlCf}{{{d{An}}c}BlCf}{{{d{B`}}c}BlCf}{{{d{Bb}}c}BlCf}{{{d{Bd}}c}BlCf}{{{d{Bf}}c}BlCf}{{{d{Bh}}c}BlCf}{{{d{Ah}}c}BlCf}{{{d{A`}}c}BlCf}{dc{}}0000000000{c{{Bl{e}}}{}{}}0000000000{{}{{Bl{c}}}{}}0000000000{dCh}0000000000{{{d{n}}}{{Bl{fl}}}}{{{d{Ad}}}{{Bl{fl}}}}{{{d{B`}}}{{Bl{fl}}}}{{{d{Bb}}}{{Bl{fl}}}}{{{d{A`}}}{{Bl{fl}}}}{CjAf}{ClAf}{CnD`}{DbD`}{DdD`}{Cll}{Cjl}3{DdBf}{DfBh}{DfD`}{ClD`}6{DhAf}{Dhl}{DjAf}{DlAf}{DnAf}{E`Bb}{DnBb}{E`Cd}{DlBb}{DlCd}{DnCd}{Ebl}{DlA`}{DjBb}{E`Af}{EbBb}{EdD`}{EfD`}1``{{{d{Ajn}}c}f{{Eh{{d{AjBb}}}}}}{{{d{AjEj}}{d{n}}}c{}}{{{d{AjEl}}{d{Ajn}}}c{}}{{{d{AjEj}}{d{Bb}}}c{}}{{{d{AjEl}}{d{AjBb}}}c{}}{{{d{AjEj}}{d{Ad}}}c{}}{{{d{AjEl}}{d{AjAd}}}c{}}{{{d{AjEj}}{d{B`}}}c{}}{{{d{AjEl}}{d{AjB`}}}c{}}{{{d{Aje}}{d{n}}}cEn{{Ej{c}}}}```````````{F`F`}000{d{{d{c}}}{}}0{{{d{Aj}}}{{d{Ajc}}}{}}0{{}F`}{FbFd}1{cc{}}0{{{d{Ff}}}{{Bl{FbFh}}}}{{{d{Ff}}}{{Bl{FdFh}}}}{{{d{AjFf}}}{{Bl{FbFh}}}}{{{d{AjFf}}}{{Bl{FdFh}}}}{{}{{Cd{Fj}}}}{{{d{b}}}Ab}{{}c{}}0{FbFl}{c{{Bl{e}}}{}{}}0{{}{{Bl{c}}}{}}0{dCh}0{{{d{AjFb}}{d{Ff}}}{{Bl{fFh}}}}{{{d{AjFd}}{d{Ff}}}{{Bl{fFh}}}}{{{d{AjFb}}{d{AjFf}}}{{Bl{fFh}}}}{{{d{AjFd}}{d{AjFf}}}{{Bl{fFh}}}}{FbAb}{FbFn}{G`Ab}{G`Gb}{GdGb}{GfCd}32{GfGb}{GhGb}0{Fb{{h{f}}}}`{{{d{Gj}}{d{j}}}{{h{l}}}}``{{{d{b}}}l}00`{d{{d{c}}}{}}{{{d{Aj}}}{{d{Ajc}}}{}}{{{d{Gl}}{d{Gj}}}{{h{l}}}}{{{d{Gl}}{d{Gn}}}{{h{l}}}}0{cc{}}{{}c{}}{jGl}{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{dCh}``````{{{d{n}}}{{h{Gj}}}}{{Gj{d{j}}}{{h{Gj}}}}``````````{{{d{AjH`}}Hb}f}{{{d{b}}}H`}==<<{{{d{Hb}}}Hb}{{{d{H`}}}H`}{{d{d{Ajc}}}f{}}0{{dBj}f}0{{{d{H`}}{d{Hb}}}Ab}{{}H`}{c{{Bl{Hb}}}Bn}{c{{Bl{H`}}}Bn}{{{d{Hb}}{d{Hb}}}Ab}{{{d{Hb}}{d{AjC`}}}Cb}{{{d{H`}}{d{AjC`}}}Cb}{cc{}}{HbH`}1{{{Af{Hb}}}H`}{{{d{H`}}}Ab}00{{{d{Hb}}{d{Ajc}}}fHd}{{}c{}}02{{{d{H`}}{d{H`}}}Ab}<{{{d{Hb}}c}BlCf}{{{d{H`}}c}BlCf}7{dc{}}0{{{d{H`}}}{{Af{Hb}}}}{c{{Bl{e}}}{}{}}0{{}{{Bl{c}}}{}}0{dCh}0{{{d{H`}}{d{H`}}}H`}``````````````{{HfGn}Hf}{{Hf{Af{Gn}}}Hf}{HfAf}{{{d{Gn}}}{{Cd{l}}}}{d{{d{c}}}{}}00{{{d{Aj}}}{{d{Ajc}}}{}}00{{{d{Gj}}}Gj}{{{d{Hf}}}Hf}{{{d{Gn}}}Gn}{{d{d{Ajc}}}f{}}00{{dBj}f}00{c{{Bl{Gj}}}Bn}{c{{Bl{Hf}}}Bn}{c{{Bl{Gn}}}Bn}{{{d{Gj}}}H`}{{{d{Gj}}{d{AjC`}}}Cb}{{{d{Hf}}{d{AjC`}}}Cb}{{{d{Gn}}{d{AjC`}}}Cb}{cc{}}00{{}c{}}00{{{d{Gn}}}Ab}{{{d{Gj}}}Ab}{cHf{{Hh{l}}}}{Hfl}{{{d{Gj}}c}BlCf}{{{d{Hf}}c}BlCf}{{{d{Gn}}c}BlCf}{dc{}}00{c{{Bl{e}}}{}{}}00{{}{{Bl{c}}}{}}00{dCh}00{HjHf}{HlBj}{HnH`}{HjH`}{I`Cd}{HlCd}{Hnl}{I`Gn}{I`D`}{HnGn}``````````````````{d{{d{c}}}{}}00{{{d{Aj}}}{{d{Ajc}}}{}}00{{{d{j}}}j}{{{d{Fl}}}Fl}{{{d{Fn}}}Fn}{{d{d{Ajc}}}f{}}00{{dBj}f}00{{}j}{c{{Bl{j}}}Bn}{c{{Bl{Fl}}}Bn}{c{{Bl{Fn}}}Bn}{jAb}{{{d{j}}{d{AjC`}}}Cb}{{{d{Fl}}{d{AjC`}}}Cb}{{{d{Fn}}{d{AjC`}}}Cb}{cc{}}00{{}c{}}005{{{d{j}}c}BlCf}{{{d{Fl}}c}BlCf}{{{d{Fn}}c}BlCf}{jFl}{dc{}}00{{{d{Fl}}}{{Cd{Ib}}}}{{{d{Fn}}}{{Cd{Ib}}}}{c{{Bl{e}}}{}{}}00{{}{{Bl{c}}}{}}00{dCh}00{{}{{d{{Id{Fl}}}}}}{{}{{d{{Id{Fn}}}}}}{jFn}`````````````{d{{d{c}}}{}}{{{d{Aj}}}{{d{Ajc}}}{}}{{{d{If}}{d{AjC`}}}Cb}0{IhIf}{IjIf}{IlIf}{InIf}{cc{}}{{}c{}}{{{d{If}}}{{Cd{{d{J`}}}}}}{dl}{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{dCh}``{{{d{b}}}{{h{n}}}}`{{{d{Gj}}Fn}{{h{f}}}}{{{d{Gj}}}{{h{f}}}}000","D":"Nf","p":[[1,"str"],[1,"reference",null,null,1],[1,"unit"],[8,"Result",578],[5,"Config",516],[5,"String",615],[5,"RestrictedAst",20],[6,"Pattern",20],[1,"bool"],[5,"Function",20],[5,"Vec",616],[5,"MatchArm",20],[0,"mut"],[5,"Parameter",20],[6,"Type",20],[6,"Stmt",20],[6,"Expr",20],[6,"Literal",20],[6,"BinaryOp",20],[6,"UnaryOp",20],[1,"u8"],[6,"Result",617,null,1],[10,"Deserializer",618],[5,"Formatter",619],[8,"Result",619],[6,"Option",620,null,1],[10,"Serializer",621],[5,"TypeId",622],[15,"FunctionCall",253],[15,"MethodCall",253],[15,"Try",253],[5,"Box",623,null,1],[15,"Index",253],[15,"Binary",253],[15,"Unary",253],[15,"Struct",266],[15,"Match",268],[15,"For",268],[15,"While",268],[15,"If",268],[15,"Let",268],[15,"Result",282],[15,"Option",282],[10,"FnMut",624],[10,"Visitor",285],[10,"VisitorMut",285],[10,"Default",625],[5,"Command",626],[5,"Cli",302],[6,"Commands",302],[5,"ArgMatches",627],[8,"Error",628],[5,"Id",629],[6,"ShellDialect",516],[6,"VerificationLevel",516],[15,"Build",342],[5,"PathBuf",630],[15,"Check",342],[15,"Init",342],[15,"Verify",342],[6,"ShellIR",434],[5,"PosixEmitter",359],[6,"ShellValue",434],[5,"EffectSet",380],[6,"Effect",380],[10,"Hasher",631],[5,"Command",434],[10,"Into",632,null,1],[15,"Exec",499],[15,"Exit",499],[15,"Let",499],[15,"If",499],[5,"PossibleValue",633],[1,"slice"],[6,"Error",578],[5,"Error",619],[5,"Error",634],[5,"Error",635],[5,"Error",636],[10,"Error",637]],"r":[[0,516],[1,578],[2,578],[12,20],[13,20],[14,20],[15,20],[16,20],[297,302],[298,302],[301,351],[352,359],[371,434],[372,380],[373,380],[374,434],[375,434],[509,516],[510,578],[511,578],[512,516],[513,516],[606,608]],"b":[[409,"impl-From%3CEffect%3E-for-EffectSet"],[411,"impl-From%3CVec%3CEffect%3E%3E-for-EffectSet"],[593,"impl-Debug-for-Error"],[594,"impl-Display-for-Error"],[595,"impl-From%3CError%3E-for-Error"],[596,"impl-From%3CError%3E-for-Error"],[597,"impl-From%3CError%3E-for-Error"],[598,"impl-From%3CError%3E-for-Error"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPQBJAAAAAQABgAEAAwABgAUAI4ArgABALsAZAAhAQcAKgEEADEBAQA1AQoAQgEFAEsBCQBgAQEAYwEBAGgBBQBwAQkAfAECAIgBCQCTAQUAmgEAAJwBAACgAQAApgEBAKkBAQCsAQUAtAEAAL0BAQDBAQIAxQERANgBAgDjAUMALQIWAEUCBQBMAgsAWgIGAGICAAA=","P":[[80,"T"],[102,""],[113,"T"],[124,""],[138,"__D"],[149,""],[162,"T"],[173,""],[175,"U"],[186,""],[193,"__S"],[204,"T"],[215,"U,T"],[226,"U"],[237,""],[287,"F"],[288,"T"],[296,"T,V"],[308,""],[312,"T"],[316,""],[319,"T"],[321,""],[327,"U"],[329,""],[330,"U,T"],[332,"U"],[334,""],[360,"T"],[362,""],[365,"T"],[366,"U"],[367,""],[368,"U,T"],[369,"U"],[370,""],[391,"T"],[395,""],[397,"T"],[399,""],[403,"__D"],[405,""],[408,"T"],[409,""],[410,"T"],[411,""],[415,"__H"],[416,"U"],[418,""],[421,"__S"],[423,""],[424,"T"],[426,""],[427,"U,T"],[429,"U"],[431,""],[452,"T"],[458,""],[461,"T"],[464,""],[467,"__D"],[470,""],[474,"T"],[477,"U"],[480,""],[482,""],[483,""],[484,"__S"],[487,"T"],[490,"U,T"],[493,"U"],[496,""],[527,"T"],[533,""],[536,"T"],[539,""],[543,"__D"],[546,""],[550,"T"],[553,"U"],[556,""],[557,"__S"],[560,""],[561,"T"],[564,""],[566,"U,T"],[569,"U"],[572,""],[591,"T"],[593,""],[599,"T"],[600,"U"],[601,""],[603,"U,T"],[604,"U"],[605,""]]}],["rash_metrics",{"t":"HH","n":["analyze_directory","main"],"q":[[0,"rash_metrics"],[2,"std::path"]],"i":"``","f":"{{{d{b}}}{{h{ffff}}}}{{}j}","D":"`","p":[[5,"Path",2],[1,"reference",null,null,1],[1,"usize"],[1,"tuple",null,null,1],[1,"unit"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAIAEAAAAAAAAQACAA==","P":[]}],["rash_runtime",{"t":"SH","n":["RUNTIME_LIBRARY","get_runtime"],"q":[[0,"rash_runtime"]],"i":"``","f":"{{}b}{{}{{b{d}}}}","D":"b","p":[[1,"reference",null,null,1],[1,"str"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAEAEAAAAAAAAgA=","P":[]}],["rash_tests",{"t":"CFNNNNNNNNNN","n":["sandbox","Sandbox","borrow","borrow_mut","from","into","new","run_shell_script","temp_path","try_from","try_into","type_id"],"q":[[0,"rash_tests"],[1,"rash_tests::sandbox"],[12,"anyhow"],[13,"std::process"],[14,"std::path"],[15,"core::result"],[16,"core::any"]],"i":"``f000000000","f":"``{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{cc{}}{{}c{}}{{}{{h{f}}}}{{{b{f}}{b{j}}}{{h{l}}}}{{{b{f}}}{{b{n}}}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{bAb}","D":"d","p":[[1,"reference",null,null,1],[0,"mut"],[5,"Sandbox",1],[8,"Result",12],[1,"str"],[5,"Output",13],[5,"Path",14],[6,"Result",15,null,1],[5,"TypeId",16]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAoAAgAAAAQABwAFAA==","P":[[2,"T"],[5,"U"],[6,""],[9,"U,T"],[10,"U"],[11,""]]}],["rash_tests",{"t":"CFNNNNNNONNNN","n":["sandbox","Sandbox","borrow","borrow_mut","from","into","new","run_shell_script","temp_dir","temp_path","try_from","try_into","type_id"],"q":[[0,"rash_tests"],[1,"rash_tests::sandbox"],[13,"anyhow"],[14,"std::process"],[15,"tempfile::dir"],[16,"std::path"],[17,"core::result"],[18,"core::any"]],"i":"``f0000000000","f":"``{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{cc{}}{{}c{}}{{}{{h{f}}}}{{{b{f}}{b{j}}}{{h{l}}}}{fn}{{{b{f}}}{{b{A`}}}}{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{bAd}","D":"d","p":[[1,"reference",null,null,1],[0,"mut"],[5,"Sandbox",1],[8,"Result",13],[1,"str"],[5,"Output",14],[5,"TempDir",15],[5,"Path",16],[6,"Result",17,null,1],[5,"TypeId",18]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAsAAgAAAAQABwAGAA==","P":[[2,"T"],[5,"U"],[6,""],[10,"U,T"],[11,"U"],[12,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[402,1264,17177,14519,325,251,756,813]}