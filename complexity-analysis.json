{
  "summary": {
    "total_files": 61,
    "total_functions": 387,
    "avg_cyclomatic": 2.4263566,
    "avg_cognitive": 3.0723515,
    "p90_cyclomatic": 7,
    "p90_cognitive": 9,
    "technical_debt_hours": 74.75
  },
  "violations": [
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "value": 11,
      "threshold": 10,
      "file": "./rash/src/bin/quality-gate.rs",
      "line": 1,
      "function": "main"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 20 exceeds recommended complexity of 15",
      "value": 20,
      "threshold": 15,
      "file": "./rash/src/bin/quality-gate.rs",
      "line": 1,
      "function": "main"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "value": 11,
      "threshold": 10,
      "file": "./rash/src/bin/rash-metrics.rs",
      "line": 1,
      "function": "analyze_directory"
    },
    {
      "severity": "error",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 48 exceeds maximum allowed complexity of 30",
      "value": 48,
      "threshold": 30,
      "file": "./rash/src/bin/rash-metrics.rs",
      "line": 1,
      "function": "analyze_directory"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 13 exceeds recommended complexity of 10",
      "value": 13,
      "threshold": 10,
      "file": "./rash/src/ir/mod.rs",
      "line": 1,
      "function": "IrConverter::convert_stmt"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "value": 11,
      "threshold": 10,
      "file": "./rash/src/ir/mod.rs",
      "line": 1,
      "function": "IrConverter::convert_expr_to_value"
    },
    {
      "severity": "error",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 32 exceeds maximum allowed complexity of 20",
      "value": 32,
      "threshold": 20,
      "file": "./rash/src/ast/restricted.rs",
      "line": 1,
      "function": "Stmt::validate"
    },
    {
      "severity": "error",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 45 exceeds maximum allowed complexity of 30",
      "value": 45,
      "threshold": 30,
      "file": "./rash/src/ast/restricted.rs",
      "line": 1,
      "function": "Stmt::validate"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 18 exceeds recommended complexity of 10",
      "value": 18,
      "threshold": 10,
      "file": "./rash/src/ast/restricted.rs",
      "line": 1,
      "function": "Stmt::collect_function_calls"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 21 exceeds recommended complexity of 15",
      "value": 21,
      "threshold": 15,
      "file": "./rash/src/ast/restricted.rs",
      "line": 1,
      "function": "Stmt::collect_function_calls"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 13 exceeds recommended complexity of 10",
      "value": 13,
      "threshold": 10,
      "file": "./rash/src/ast/restricted.rs",
      "line": 1,
      "function": "Expr::validate"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 14 exceeds recommended complexity of 10",
      "value": 14,
      "threshold": 10,
      "file": "./rash/src/ast/restricted.rs",
      "line": 1,
      "function": "Expr::collect_function_calls"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 12 exceeds recommended complexity of 10",
      "value": 12,
      "threshold": 10,
      "file": "./rash/src/emitter/posix.rs",
      "line": 1,
      "function": "PosixEmitter::write_header"
    },
    {
      "severity": "error",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 30 exceeds maximum allowed complexity of 20",
      "value": 30,
      "threshold": 20,
      "file": "./rash/src/emitter/posix.rs",
      "line": 1,
      "function": "PosixEmitter::write_runtime"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 30 exceeds recommended complexity of 15",
      "value": 30,
      "threshold": 15,
      "file": "./rash/src/emitter/posix.rs",
      "line": 1,
      "function": "PosixEmitter::write_runtime"
    },
    {
      "severity": "error",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 24 exceeds maximum allowed complexity of 20",
      "value": 24,
      "threshold": 20,
      "file": "./rash/src/emitter/posix.rs",
      "line": 1,
      "function": "PosixEmitter::emit_ir"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 28 exceeds recommended complexity of 15",
      "value": 28,
      "threshold": 15,
      "file": "./rash/src/emitter/posix.rs",
      "line": 1,
      "function": "PosixEmitter::emit_ir"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 20 exceeds recommended complexity of 10",
      "value": 20,
      "threshold": 10,
      "file": "./rash/src/emitter/posix.rs",
      "line": 1,
      "function": "PosixEmitter::emit_shell_value"
    },
    {
      "severity": "error",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 42 exceeds maximum allowed complexity of 30",
      "value": 42,
      "threshold": 30,
      "file": "./rash/src/emitter/posix.rs",
      "line": 1,
      "function": "PosixEmitter::emit_shell_value"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 18 exceeds recommended complexity of 15",
      "value": 18,
      "threshold": 15,
      "file": "./rash/src/emitter/escape.rs",
      "line": 1,
      "function": "escape_variable_name"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 17 exceeds recommended complexity of 15",
      "value": 17,
      "threshold": 15,
      "file": "./rash/src/services/parser.rs",
      "line": 1,
      "function": "parse"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 11 exceeds recommended complexity of 10",
      "value": 11,
      "threshold": 10,
      "file": "./rash/src/services/parser.rs",
      "line": 1,
      "function": "convert_function"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 16 exceeds recommended complexity of 15",
      "value": 16,
      "threshold": 15,
      "file": "./rash/src/services/parser.rs",
      "line": 1,
      "function": "convert_function"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 15 exceeds recommended complexity of 10",
      "value": 15,
      "threshold": 10,
      "file": "./rash/src/services/parser.rs",
      "line": 1,
      "function": "convert_type"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 26 exceeds recommended complexity of 15",
      "value": 26,
      "threshold": 15,
      "file": "./rash/src/services/parser.rs",
      "line": 1,
      "function": "convert_type"
    },
    {
      "severity": "error",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 23 exceeds maximum allowed complexity of 20",
      "value": 23,
      "threshold": 20,
      "file": "./rash/src/services/parser.rs",
      "line": 1,
      "function": "convert_expr"
    },
    {
      "severity": "warning",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 27 exceeds recommended complexity of 15",
      "value": 27,
      "threshold": 15,
      "file": "./rash/src/services/parser.rs",
      "line": 1,
      "function": "convert_expr"
    },
    {
      "severity": "warning",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 14 exceeds recommended complexity of 10",
      "value": 14,
      "threshold": 10,
      "file": "./rash/src/services/parser.rs",
      "line": 1,
      "function": "convert_binary_op"
    },
    {
      "severity": "error",
      "rule": "cyclomatic-complexity",
      "message": "Cyclomatic complexity of 26 exceeds maximum allowed complexity of 20",
      "value": 26,
      "threshold": 20,
      "file": "./rash-runtime/build.rs",
      "line": 1,
      "function": "validate_shell_syntax"
    },
    {
      "severity": "error",
      "rule": "cognitive-complexity",
      "message": "Cognitive complexity of 44 exceeds maximum allowed complexity of 30",
      "value": 44,
      "threshold": 30,
      "file": "./rash-runtime/build.rs",
      "line": 1,
      "function": "validate_shell_syntax"
    }
  ],
  "hotspots": [
    {
      "file": "./rash/src/ast/restricted.rs",
      "function": "Stmt::validate",
      "line": 1,
      "complexity": 32,
      "complexity_type": "cyclomatic"
    },
    {
      "file": "./rash/src/emitter/posix.rs",
      "function": "PosixEmitter::write_runtime",
      "line": 1,
      "complexity": 30,
      "complexity_type": "cyclomatic"
    },
    {
      "file": "./rash-runtime/build.rs",
      "function": "validate_shell_syntax",
      "line": 1,
      "complexity": 26,
      "complexity_type": "cyclomatic"
    },
    {
      "file": "./rash/src/emitter/posix.rs",
      "function": "PosixEmitter::emit_ir",
      "line": 1,
      "complexity": 24,
      "complexity_type": "cyclomatic"
    },
    {
      "file": "./rash/src/services/parser.rs",
      "function": "convert_expr",
      "line": 1,
      "complexity": 23,
      "complexity_type": "cyclomatic"
    },
    {
      "file": "./rash/src/emitter/posix.rs",
      "function": "PosixEmitter::emit_shell_value",
      "line": 1,
      "complexity": 20,
      "complexity_type": "cyclomatic"
    },
    {
      "file": "./rash/src/ast/restricted.rs",
      "function": "Stmt::collect_function_calls",
      "line": 1,
      "complexity": 18,
      "complexity_type": "cyclomatic"
    },
    {
      "file": "./rash/src/services/parser.rs",
      "function": "convert_type",
      "line": 1,
      "complexity": 15,
      "complexity_type": "cyclomatic"
    },
    {
      "file": "./rash/src/ast/restricted.rs",
      "function": "Expr::collect_function_calls",
      "line": 1,
      "complexity": 14,
      "complexity_type": "cyclomatic"
    },
    {
      "file": "./rash/src/services/parser.rs",
      "function": "convert_binary_op",
      "line": 1,
      "complexity": 14,
      "complexity_type": "cyclomatic"
    }
  ],
  "files": [
    {
      "path": "./install-rash.rs",
      "total_complexity": {
        "cyclomatic": 5,
        "cognitive": 6,
        "nesting_max": 2,
        "lines": 30
      },
      "functions": [
        {
          "name": "main",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 22
          }
        },
        {
          "name": "detect_arch",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 4,
            "nesting_max": 2,
            "lines": 5
          }
        },
        {
          "name": "echo",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          }
        },
        {
          "name": "exit",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          }
        },
        {
          "name": "concat",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "file_exists",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "mkdir_p",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          }
        },
        {
          "name": "download",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          }
        },
        {
          "name": "extract_tar",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          }
        },
        {
          "name": "chmod",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          }
        },
        {
          "name": "remove_file",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          }
        },
        {
          "name": "command_output",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./test-project/src/main.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 2
      },
      "functions": [
        {
          "name": "install",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./examples/installer.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 8
      },
      "functions": [
        {
          "name": "main",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "echo",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          }
        },
        {
          "name": "mkdir",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          }
        },
        {
          "name": "touch",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          }
        },
        {
          "name": "concat",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./examples/simple.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 5
      },
      "functions": [
        {
          "name": "install",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "echo",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          }
        },
        {
          "name": "mkdir",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./examples/basic.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 3
      },
      "functions": [
        {
          "name": "install",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "echo",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./examples/debug.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 1
      },
      "functions": [
        {
          "name": "main",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./examples/minimal.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 2
      },
      "functions": [
        {
          "name": "install",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./rash/src/bin/quality-gate.rs",
      "total_complexity": {
        "cyclomatic": 11,
        "cognitive": 20,
        "nesting_max": 4,
        "lines": 34
      },
      "functions": [
        {
          "name": "main",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 11,
            "cognitive": 20,
            "nesting_max": 4,
            "lines": 34
          }
        }
      ],
      "classes": [
        {
          "name": "ComplexityReport",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "FileComplexity",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DeadCodeReport",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "DeadCodeFile",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./rash/src/bin/quality-dashboard.rs",
      "total_complexity": {
        "cyclomatic": 2,
        "cognitive": 2,
        "nesting_max": 0,
        "lines": 11
      },
      "functions": [
        {
          "name": "count_lines_of_code",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "count_tests",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "count_files",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "main",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 0,
            "lines": 5
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./rash/src/bin/rash.rs",
      "total_complexity": {
        "cyclomatic": 2,
        "cognitive": 2,
        "nesting_max": 2,
        "lines": 8
      },
      "functions": [
        {
          "name": "main",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 8
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./rash/src/bin/rash-metrics.rs",
      "total_complexity": {
        "cyclomatic": 14,
        "cognitive": 51,
        "nesting_max": 8,
        "lines": 43
      },
      "functions": [
        {
          "name": "analyze_directory",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 11,
            "cognitive": 48,
            "nesting_max": 8,
            "lines": 22
          }
        },
        {
          "name": "main",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 2,
            "lines": 21
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./rash/src/testing/fuzz.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 4
      },
      "functions": [
        {
          "name": "FuzzTester::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "FuzzTester::run_fuzz_tests",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        }
      ],
      "classes": [
        {
          "name": "FuzzTester",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./rash/src/testing/mod.rs",
      "total_complexity": {
        "cyclomatic": 87,
        "cognitive": 107,
        "nesting_max": 3,
        "lines": 290
      },
      "functions": [
        {
          "name": "TestConfig::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ExhaustiveTestHarness::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ExhaustiveTestHarness::run_all_tests",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 7,
            "nesting_max": 0,
            "lines": 12
          }
        },
        {
          "name": "ExhaustiveTestHarness::run_boundary_tests",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "ExhaustiveTestHarness::run_error_injection_tests",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 8
          }
        },
        {
          "name": "ExhaustiveTestHarness::run_fuzz_tests",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 8,
            "nesting_max": 2,
            "lines": 13
          }
        },
        {
          "name": "ExhaustiveTestHarness::run_regression_tests",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 11,
            "nesting_max": 3,
            "lines": 15
          }
        },
        {
          "name": "ExhaustiveTestHarness::run_cross_validation_tests",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 11,
            "nesting_max": 3,
            "lines": 13
          }
        },
        {
          "name": "ExhaustiveTestHarness::run_stress_tests",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "ExhaustiveTestHarness::verify_coverage",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 7
          }
        },
        {
          "name": "ExhaustiveTestHarness::print_final_report",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 12
          }
        },
        {
          "name": "ExhaustiveTestHarness::generate_random_input",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "ExhaustiveTestHarness::generate_random_values",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ExhaustiveTestHarness::generate_random_string",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "ExhaustiveTestHarness::fill_template",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 4
          }
        },
        {
          "name": "ExhaustiveTestHarness::run_single_test",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ExhaustiveTestHarness::semantically_equivalent",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "ExhaustiveTestHarness::normalize_output",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ExhaustiveTestHarness::estimate_coverage",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "ExhaustiveTestHarness::test_integer_boundaries",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "ExhaustiveTestHarness::test_string_boundaries",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "ExhaustiveTestHarness::test_memory_boundaries",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "ExhaustiveTestHarness::test_syntax_boundaries",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "ExhaustiveTestHarness::test_allocation_failures",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "ExhaustiveTestHarness::test_io_failures",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "ExhaustiveTestHarness::test_parser_failures",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "ExhaustiveTestHarness::test_large_inputs",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "ExhaustiveTestHarness::test_deep_nesting",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "ExhaustiveTestHarness::test_concurrent_execution",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "ExhaustiveTestHarness::load_regression_test_cases",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ExhaustiveTestHarness::load_validation_test_cases",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "test_exhaustive_harness_basic",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_random_input_generation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 5
          }
        }
      ],
      "classes": [
        {
          "name": "TestConfig",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ExhaustiveTestHarness",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "TestStatistics",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "RegressionTestCase",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ValidationTestCase",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./rash/src/testing/mutation.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 4
      },
      "functions": [
        {
          "name": "MutationTester::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "MutationTester::run_mutation_tests",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        }
      ],
      "classes": [
        {
          "name": "MutationTester",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./rash/src/testing/cross_validation.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 4
      },
      "functions": [
        {
          "name": "CrossValidationTester::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "CrossValidationTester::run_cross_validation_tests",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        }
      ],
      "classes": [
        {
          "name": "CrossValidationTester",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./rash/src/testing/regression.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 4
      },
      "functions": [
        {
          "name": "RegressionTester::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "RegressionTester::run_regression_tests",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        }
      ],
      "classes": [
        {
          "name": "RegressionTester",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./rash/src/testing/coverage.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 4
      },
      "functions": [
        {
          "name": "CoverageTester::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "CoverageTester::verify_coverage",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        }
      ],
      "classes": [
        {
          "name": "CoverageTester",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./rash/src/testing/error_injection.rs",
      "total_complexity": {
        "cyclomatic": 83,
        "cognitive": 117,
        "nesting_max": 2,
        "lines": 212
      },
      "functions": [
        {
          "name": "ErrorInjectionTester::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ErrorInjectionTester::run_error_injection_tests",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "ErrorInjectionTester::test_allocation_failures",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 8,
            "cognitive": 12,
            "nesting_max": 2,
            "lines": 18
          }
        },
        {
          "name": "ErrorInjectionTester::test_io_failures",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 8,
            "nesting_max": 2,
            "lines": 8
          }
        },
        {
          "name": "ErrorInjectionTester::test_parser_failures",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 9,
            "cognitive": 14,
            "nesting_max": 2,
            "lines": 15
          }
        },
        {
          "name": "ErrorInjectionTester::test_validation_failures",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 8,
            "nesting_max": 2,
            "lines": 10
          }
        },
        {
          "name": "ErrorInjectionTester::test_codegen_failures",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 7,
            "nesting_max": 2,
            "lines": 13
          }
        },
        {
          "name": "ErrorInjectionTester::test_with_allocation_failure",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ErrorInjectionTester::test_with_memory_pressure",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ErrorInjectionTester::test_with_io_failure",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ErrorInjectionTester::create_deeply_nested_input",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 7
          }
        },
        {
          "name": "ErrorInjectionResults::merge",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "ErrorInjectionResults::success_rate",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 3
          }
        },
        {
          "name": "FailingAllocator::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "FailingAllocator::alloc",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "FailingAllocator::dealloc",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "test_parser_error_injection",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "test_validation_error_injection",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_full_error_injection_suite",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        }
      ],
      "classes": [
        {
          "name": "ErrorInjectionTester",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "FailurePoint",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "ErrorInjectionResults",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "FailingAllocator",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./rash/src/testing/boundary.rs",
      "total_complexity": {
        "cyclomatic": 83,
        "cognitive": 91,
        "nesting_max": 2,
        "lines": 271
      },
      "functions": [
        {
          "name": "BoundaryTester::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "BoundaryTester::run_all_boundary_tests",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 6,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "BoundaryTester::test_integer_boundaries",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 10,
            "nesting_max": 2,
            "lines": 19
          }
        },
        {
          "name": "BoundaryTester::test_string_boundaries",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 7,
            "nesting_max": 2,
            "lines": 21
          }
        },
        {
          "name": "BoundaryTester::test_memory_boundaries",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 2,
            "lines": 14
          }
        },
        {
          "name": "BoundaryTester::test_syntax_boundaries",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 16
          }
        },
        {
          "name": "BoundaryTester::test_unicode_boundaries",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 14
          }
        },
        {
          "name": "BoundaryTester::test_nesting_boundaries",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 7,
            "nesting_max": 2,
            "lines": 22
          }
        },
        {
          "name": "BoundaryTester::test_transpile",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "BoundaryTestResults::merge",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "BoundaryTestResults::merge_test",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 4
          }
        },
        {
          "name": "BoundaryTestResults::success_rate",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 3
          }
        },
        {
          "name": "test_integer_boundaries",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "test_string_boundaries",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_all_boundaries",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        }
      ],
      "classes": [
        {
          "name": "BoundaryTester",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "BoundaryTestResults",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./rash/src/testing/stress.rs",
      "total_complexity": {
        "cyclomatic": 70,
        "cognitive": 106,
        "nesting_max": 3,
        "lines": 214
      },
      "functions": [
        {
          "name": "StressTestResults::success_rate",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 3
          }
        },
        {
          "name": "StressTester::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "StressTester::run_stress_tests",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 6,
            "nesting_max": 1,
            "lines": 11
          }
        },
        {
          "name": "StressTester::test_high_load_transpilation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 11,
            "nesting_max": 3,
            "lines": 18
          }
        },
        {
          "name": "StressTester::test_concurrent_operations",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 8,
            "nesting_max": 2,
            "lines": 31
          }
        },
        {
          "name": "StressTester::test_memory_pressure",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 6,
            "nesting_max": 2,
            "lines": 10
          }
        },
        {
          "name": "StressTester::test_sustained_load",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 8,
            "nesting_max": 3,
            "lines": 17
          }
        },
        {
          "name": "StressTester::test_burst_load",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 13,
            "nesting_max": 3,
            "lines": 16
          }
        }
      ],
      "classes": [
        {
          "name": "StressTestResults",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "StressTester",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./rash/src/ir/mod.rs",
      "total_complexity": {
        "cyclomatic": 90,
        "cognitive": 105,
        "nesting_max": 3,
        "lines": 111
      },
      "functions": [
        {
          "name": "from_ast",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "optimize",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "IrConverter::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "IrConverter::convert",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "IrConverter::convert_stmt",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 13,
            "cognitive": 14,
            "nesting_max": 2,
            "lines": 14
          }
        },
        {
          "name": "IrConverter::convert_stmts",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 4
          }
        },
        {
          "name": "IrConverter::convert_expr",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 7,
            "nesting_max": 2,
            "lines": 8
          }
        },
        {
          "name": "IrConverter::convert_expr_to_value",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 11,
            "cognitive": 14,
            "nesting_max": 2,
            "lines": 7
          }
        },
        {
          "name": "IrConverter::analyze_command_effects",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "constant_fold",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 12,
            "nesting_max": 3,
            "lines": 7
          }
        },
        {
          "name": "eliminate_dead_code",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "transform_ir",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 7
          }
        }
      ],
      "classes": [
        {
          "name": "IrConverter",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./rash/src/ir/effects.rs",
      "total_complexity": {
        "cyclomatic": 20,
        "cognitive": 20,
        "nesting_max": 1,
        "lines": 61
      },
      "functions": [
        {
          "name": "EffectSet::pure",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "EffectSet::single",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "EffectSet::add",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "EffectSet::is_pure",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "EffectSet::contains",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "EffectSet::union",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "EffectSet::is_subset_of",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "EffectSet::to_vec",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "EffectSet::has_filesystem_effects",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "EffectSet::has_network_effects",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "EffectSet::has_system_effects",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "EffectSet::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "EffectSet::from",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "EffectSet::from",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 4
          }
        },
        {
          "name": "analyze_command_effects",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 8,
            "cognitive": 8,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "test_pure_effect_set",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_effect_set_union",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_command_effect_analysis",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        }
      ],
      "classes": [
        {
          "name": "EffectSet",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./rash/src/ir/tests.rs",
      "total_complexity": {
        "cyclomatic": 36,
        "cognitive": 46,
        "nesting_max": 2,
        "lines": 85
      },
      "functions": [
        {
          "name": "test_simple_ast_to_ir_conversion",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 8,
            "nesting_max": 2,
            "lines": 7
          }
        },
        {
          "name": "test_function_call_to_command",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 8,
            "nesting_max": 2,
            "lines": 7
          }
        },
        {
          "name": "test_shell_value_constant_detection",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "test_shell_value_constant_string_extraction",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_command_builder",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_shell_ir_effects_calculation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_optimization_constant_folding",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "test_optimization_disabled",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "test_if_statement_conversion",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 8,
            "nesting_max": 2,
            "lines": 8
          }
        },
        {
          "name": "test_return_statement_conversion",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 8,
            "nesting_max": 2,
            "lines": 7
          }
        },
        {
          "name": "test_binary_expression_conversion",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 8,
            "nesting_max": 2,
            "lines": 6
          }
        },
        {
          "name": "test_command_effect_classification",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "test_ir_sequence_effects_aggregation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_nested_ir_effects",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_error_handling_in_conversion",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "test_complex_nested_structures",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./rash/src/ir/shell_ir.rs",
      "total_complexity": {
        "cyclomatic": 38,
        "cognitive": 44,
        "nesting_max": 4,
        "lines": 48
      },
      "functions": [
        {
          "name": "ShellIR::effects",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 6,
            "nesting_max": 2,
            "lines": 6
          }
        },
        {
          "name": "ShellIR::is_pure",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "Command::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "Command::arg",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "Command::args",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "ShellValue::is_constant",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "ShellValue::as_constant_string",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 9,
            "cognitive": 12,
            "nesting_max": 4,
            "lines": 11
          }
        }
      ],
      "classes": [
        {
          "name": "Command",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./rash/src/cli/mod.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 0
      },
      "functions": [],
      "classes": []
    },
    {
      "path": "./rash/src/cli/args.rs",
      "total_complexity": {
        "cyclomatic": 20,
        "cognitive": 20,
        "nesting_max": 1,
        "lines": 8
      },
      "functions": [
        {
          "name": "VerificationLevel::value_variants",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "VerificationLevel::to_possible_value",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "ShellDialect::value_variants",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "ShellDialect::to_possible_value",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 1
          }
        }
      ],
      "classes": [
        {
          "name": "Cli",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./rash/src/cli/commands.rs",
      "total_complexity": {
        "cyclomatic": 25,
        "cognitive": 25,
        "nesting_max": 1,
        "lines": 55
      },
      "functions": [
        {
          "name": "execute_command",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 7,
            "nesting_max": 1,
            "lines": 14
          }
        },
        {
          "name": "build_command",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 9
          }
        },
        {
          "name": "check_command",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "init_command",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 6,
            "nesting_max": 1,
            "lines": 15
          }
        },
        {
          "name": "verify_command",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 9
          }
        },
        {
          "name": "generate_proof",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "normalize_shell_script",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./rash/src/verifier/kani_harnesses.rs",
      "total_complexity": {
        "cyclomatic": 24,
        "cognitive": 30,
        "nesting_max": 3,
        "lines": 51
      },
      "functions": [
        {
          "name": "verify_parser_soundness",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "verify_escape_safety",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "verify_variable_expansion_safety",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "verify_injection_safety",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "verify_array_bounds_safety",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 7
          }
        },
        {
          "name": "contains_unescaped_metachar",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 8,
            "cognitive": 13,
            "nesting_max": 3,
            "lines": 10
          }
        },
        {
          "name": "unescape_shell_string",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 4
          }
        },
        {
          "name": "is_valid_identifier",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "can_inject_command",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 4,
            "nesting_max": 2,
            "lines": 5
          }
        },
        {
          "name": "is_properly_escaped",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 1
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./rash/src/verifier/mod.rs",
      "total_complexity": {
        "cyclomatic": 11,
        "cognitive": 11,
        "nesting_max": 1,
        "lines": 10
      },
      "functions": [
        {
          "name": "verify",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "verify_basic",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "verify_strict",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "verify_paranoid",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 0,
            "lines": 4
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./rash/src/verifier/properties.rs",
      "total_complexity": {
        "cyclomatic": 42,
        "cognitive": 48,
        "nesting_max": 3,
        "lines": 69
      },
      "functions": [
        {
          "name": "verify_no_command_injection",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 6,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "verify_deterministic",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 5
          }
        },
        {
          "name": "verify_idempotency",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 4,
            "nesting_max": 2,
            "lines": 5
          }
        },
        {
          "name": "verify_resource_safety",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 7,
            "nesting_max": 3,
            "lines": 13
          }
        },
        {
          "name": "walk_ir",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 10,
            "cognitive": 12,
            "nesting_max": 2,
            "lines": 8
          }
        },
        {
          "name": "check_command_safety",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "check_value_safety",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 9,
            "cognitive": 10,
            "nesting_max": 2,
            "lines": 7
          }
        },
        {
          "name": "contains_shell_metacharacters",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "is_dangerous_command",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "is_nondeterministic_command",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "requires_idempotency_check",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "is_network_command",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "is_file_operation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "check_has_idempotency_guard",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 3
          }
        },
        {
          "name": "test_command_injection_detection",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_safe_command",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_dangerous_command_detection",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_nondeterministic_command_detection",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./rash/src/ast/mod.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 1
      },
      "functions": [
        {
          "name": "validate",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./rash/src/ast/visitor.rs",
      "total_complexity": {
        "cyclomatic": 20,
        "cognitive": 21,
        "nesting_max": 3,
        "lines": 21
      },
      "functions": [
        {
          "name": "walk_ast",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "transform_exprs",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 3
          }
        },
        {
          "name": "transform_stmt_exprs",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 10,
            "cognitive": 11,
            "nesting_max": 3,
            "lines": 7
          }
        },
        {
          "name": "transform_expr",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 8,
            "cognitive": 8,
            "nesting_max": 2,
            "lines": 10
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./rash/src/ast/restricted.rs",
      "total_complexity": {
        "cyclomatic": 222,
        "cognitive": 264,
        "nesting_max": 3,
        "lines": 242
      },
      "functions": [
        {
          "name": "RestrictedAst::validate",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "RestrictedAst::check_no_recursion",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 2,
            "lines": 11
          }
        },
        {
          "name": "RestrictedAst::has_cycle",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 6,
            "nesting_max": 3,
            "lines": 12
          }
        },
        {
          "name": "Function::validate",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "Function::collect_function_calls",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 2
          }
        },
        {
          "name": "Type::is_allowed",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 2
          }
        },
        {
          "name": "Stmt::validate",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 32,
            "cognitive": 45,
            "nesting_max": 3,
            "lines": 29
          }
        },
        {
          "name": "Stmt::collect_function_calls",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 18,
            "cognitive": 21,
            "nesting_max": 3,
            "lines": 19
          }
        },
        {
          "name": "Expr::validate",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 13,
            "cognitive": 15,
            "nesting_max": 2,
            "lines": 10
          }
        },
        {
          "name": "Expr::collect_function_calls",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 14,
            "cognitive": 14,
            "nesting_max": 2,
            "lines": 17
          }
        },
        {
          "name": "Pattern::validate",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 8,
            "cognitive": 10,
            "nesting_max": 2,
            "lines": 7
          }
        },
        {
          "name": "Pattern::binds_variable",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 5,
            "cognitive": 5,
            "nesting_max": 1,
            "lines": 1
          }
        }
      ],
      "classes": [
        {
          "name": "RestrictedAst",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "Function",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "Parameter",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        },
        {
          "name": "MatchArm",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./rash/src/ast/tests.rs",
      "total_complexity": {
        "cyclomatic": 3,
        "cognitive": 3,
        "nesting_max": 1,
        "lines": 37
      },
      "functions": [
        {
          "name": "test_restricted_ast_validation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "test_missing_entry_point",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_function_validation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_recursion_detection",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_indirect_recursion_detection",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_allowed_types",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "test_complex_types_allowed",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_expression_validation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_statement_validation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_function_call_collection",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_validate_public_api",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "test_invalid_ast_returns_validation_error",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 2
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./rash/src/ast/restricted_test.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 35
      },
      "functions": [
        {
          "name": "test_restricted_ast_validation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "test_missing_entry_point",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_function_validation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_recursion_detection",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_indirect_recursion_detection",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_type_validation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_expression_validation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_statement_validation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_function_call_collection",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./rash/src/models/mod.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 0
      },
      "functions": [],
      "classes": []
    },
    {
      "path": "./rash/src/models/config.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 2
      },
      "functions": [
        {
          "name": "Config::default",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        }
      ],
      "classes": [
        {
          "name": "Config",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./rash/src/models/error.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 0
      },
      "functions": [],
      "classes": []
    },
    {
      "path": "./rash/src/emitter/mod.rs",
      "total_complexity": {
        "cyclomatic": 4,
        "cognitive": 4,
        "nesting_max": 1,
        "lines": 7
      },
      "functions": [
        {
          "name": "emit",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 7
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./rash/src/emitter/posix.rs",
      "total_complexity": {
        "cyclomatic": 214,
        "cognitive": 268,
        "nesting_max": 4,
        "lines": 252
      },
      "functions": [
        {
          "name": "PosixEmitter::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "PosixEmitter::emit",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "PosixEmitter::write_header",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 12,
            "cognitive": 12,
            "nesting_max": 1,
            "lines": 13
          }
        },
        {
          "name": "PosixEmitter::write_footer",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 7,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "PosixEmitter::write_runtime",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 30,
            "cognitive": 30,
            "nesting_max": 0,
            "lines": 31
          }
        },
        {
          "name": "PosixEmitter::needs_runtime",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "PosixEmitter::emit_ir",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 24,
            "cognitive": 28,
            "nesting_max": 2,
            "lines": 26
          }
        },
        {
          "name": "PosixEmitter::emit_shell_value",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 20,
            "cognitive": 42,
            "nesting_max": 4,
            "lines": 20
          }
        },
        {
          "name": "PosixEmitter::emit_command",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "PosixEmitter::emit_test_expression",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 9,
            "cognitive": 10,
            "nesting_max": 2,
            "lines": 7
          }
        },
        {
          "name": "test_emit_simple_let",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_emit_command",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_emit_if_statement",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        }
      ],
      "classes": [
        {
          "name": "PosixEmitter",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./rash/src/emitter/tests.rs",
      "total_complexity": {
        "cyclomatic": 6,
        "cognitive": 9,
        "nesting_max": 2,
        "lines": 156
      },
      "functions": [
        {
          "name": "test_simple_let_emission",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_command_emission",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_if_statement_emission",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 9
          }
        },
        {
          "name": "test_sequence_emission",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_exit_statement_emission",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_shell_value_emission",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 14
          }
        },
        {
          "name": "test_concatenation_emission",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_command_substitution_emission",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_noop_emission",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_header_and_footer_structure",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 14
          }
        },
        {
          "name": "test_runtime_functions_included",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 9
          }
        },
        {
          "name": "test_test_expression_emission",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 12
          }
        },
        {
          "name": "test_string_escaping",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_variable_name_escaping",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_command_name_escaping",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_shell_value_emission_cases",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_complex_nested_emission",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 12
          }
        },
        {
          "name": "test_emit_public_api",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_different_shell_dialects",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "test_indentation_consistency",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 9,
            "nesting_max": 2,
            "lines": 12
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./rash/src/emitter/escape.rs",
      "total_complexity": {
        "cyclomatic": 24,
        "cognitive": 35,
        "nesting_max": 4,
        "lines": 56
      },
      "functions": [
        {
          "name": "escape_shell_string",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 8
          }
        },
        {
          "name": "escape_variable_name",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 7,
            "cognitive": 18,
            "nesting_max": 4,
            "lines": 12
          }
        },
        {
          "name": "escape_command_name",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 3
          }
        },
        {
          "name": "is_safe_unquoted",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 6,
            "nesting_max": 1,
            "lines": 7
          }
        },
        {
          "name": "is_valid_shell_identifier",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "is_safe_command_name",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 4
          }
        },
        {
          "name": "test_escape_simple_string",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_escape_string_with_quotes",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "test_variable_name_escaping",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_command_name_escaping",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 3
          }
        },
        {
          "name": "test_safe_unquoted",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./rash/src/lib.rs",
      "total_complexity": {
        "cyclomatic": 6,
        "cognitive": 6,
        "nesting_max": 0,
        "lines": 8
      },
      "functions": [
        {
          "name": "transpile",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "check",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 0,
            "lines": 3
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./rash/src/services/mod.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 0
      },
      "functions": [],
      "classes": []
    },
    {
      "path": "./rash/src/services/tests.rs",
      "total_complexity": {
        "cyclomatic": 55,
        "cognitive": 55,
        "nesting_max": 1,
        "lines": 123
      },
      "functions": [
        {
          "name": "test_simple_function_parsing",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_multiple_functions_parsing",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "test_literal_parsing",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 9,
            "cognitive": 9,
            "nesting_max": 1,
            "lines": 7
          }
        },
        {
          "name": "test_function_call_parsing",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 6,
            "nesting_max": 1,
            "lines": 9
          }
        },
        {
          "name": "test_binary_expression_parsing",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 6,
            "nesting_max": 1,
            "lines": 7
          }
        },
        {
          "name": "test_method_call_parsing",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 7
          }
        },
        {
          "name": "test_return_statement_parsing",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "test_variable_reference_parsing",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "test_parameter_parsing",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_return_type_parsing",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_error_on_no_main_function",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_error_on_multiple_main_functions",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_error_on_non_function_items",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_complex_expression_parsing",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 6
          }
        },
        {
          "name": "test_unary_expression_parsing",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 6,
            "nesting_max": 1,
            "lines": 7
          }
        },
        {
          "name": "test_type_conversion_edge_cases",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "test_literal_parsing_cases",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 4
          }
        },
        {
          "name": "test_error_handling_invalid_syntax",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 4
          }
        },
        {
          "name": "test_nested_expression_parsing",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 7
          }
        },
        {
          "name": "test_empty_function_body_handling",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_parser_maintains_source_information",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 9,
            "cognitive": 9,
            "nesting_max": 1,
            "lines": 7
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./rash/src/services/parser.rs",
      "total_complexity": {
        "cyclomatic": 93,
        "cognitive": 123,
        "nesting_max": 4,
        "lines": 86
      },
      "functions": [
        {
          "name": "parse",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 10,
            "cognitive": 17,
            "nesting_max": 4,
            "lines": 17
          }
        },
        {
          "name": "convert_function",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 11,
            "cognitive": 16,
            "nesting_max": 3,
            "lines": 13
          }
        },
        {
          "name": "convert_type",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 15,
            "cognitive": 26,
            "nesting_max": 3,
            "lines": 9
          }
        },
        {
          "name": "convert_block",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 4
          }
        },
        {
          "name": "convert_stmt",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 8,
            "cognitive": 11,
            "nesting_max": 3,
            "lines": 9
          }
        },
        {
          "name": "convert_expr",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 23,
            "cognitive": 27,
            "nesting_max": 3,
            "lines": 29
          }
        },
        {
          "name": "convert_literal",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 6,
            "cognitive": 6,
            "nesting_max": 1,
            "lines": 3
          }
        },
        {
          "name": "convert_binary_op",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 14,
            "cognitive": 14,
            "nesting_max": 1,
            "lines": 1
          }
        },
        {
          "name": "convert_unary_op",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 1
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./rash/tests/integration_tests.rs",
      "total_complexity": {
        "cyclomatic": 8,
        "cognitive": 8,
        "nesting_max": 1,
        "lines": 153
      },
      "functions": [
        {
          "name": "test_end_to_end_simple_transpilation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "test_end_to_end_with_verification",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_generated_script_execution",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "test_generated_script_with_variables",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 13
          }
        },
        {
          "name": "test_different_shell_dialects",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 10
          }
        },
        {
          "name": "test_verification_levels",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 7
          }
        },
        {
          "name": "test_optimization_effects",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 11
          }
        },
        {
          "name": "test_check_function",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "test_complex_nested_structures",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 9
          }
        },
        {
          "name": "test_function_calls_translation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 5
          }
        },
        {
          "name": "test_error_handling_invalid_source",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 5
          }
        },
        {
          "name": "test_shell_escaping_safety",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_runtime_functions_included",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "test_script_header_and_footer",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 9
          }
        },
        {
          "name": "test_deterministic_output",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_large_input_handling",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 13
          }
        },
        {
          "name": "test_proof_generation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 6
          }
        },
        {
          "name": "test_concurrent_transpilation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 11
          }
        },
        {
          "name": "test_memory_safety",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 8
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./rash/tests/exhaustive_tests.rs",
      "total_complexity": {
        "cyclomatic": 11,
        "cognitive": 13,
        "nesting_max": 2,
        "lines": 80
      },
      "functions": [
        {
          "name": "test_sqlite_style_exhaustive_suite",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 12
          }
        },
        {
          "name": "test_boundary_conditions_comprehensive",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 9
          }
        },
        {
          "name": "test_error_injection_comprehensive",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 2,
            "lines": 10
          }
        },
        {
          "name": "test_extended_fuzz_testing",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 7
          }
        },
        {
          "name": "test_nasa_grade_reliability_standards",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 11
          }
        },
        {
          "name": "test_real_world_edge_cases",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 6,
            "nesting_max": 2,
            "lines": 13
          }
        },
        {
          "name": "test_memory_safety_verification",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 2,
            "lines": 18
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./rash/benches/transpilation.rs",
      "total_complexity": {
        "cyclomatic": 3,
        "cognitive": 3,
        "nesting_max": 1,
        "lines": 78
      },
      "functions": [
        {
          "name": "benchmark_parsing",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 8
          }
        },
        {
          "name": "benchmark_ir_generation",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 11
          }
        },
        {
          "name": "benchmark_optimization",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 9
          }
        },
        {
          "name": "benchmark_emission",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 9
          }
        },
        {
          "name": "benchmark_end_to_end",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 13
          }
        },
        {
          "name": "benchmark_memory_usage",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 11
          }
        },
        {
          "name": "benchmark_scalability",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 9
          }
        },
        {
          "name": "generate_large_rust_source",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 8
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./rash/benches/verification.rs",
      "total_complexity": {
        "cyclomatic": 10,
        "cognitive": 10,
        "nesting_max": 1,
        "lines": 96
      },
      "functions": [
        {
          "name": "benchmark_verification_levels",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 17
          }
        },
        {
          "name": "benchmark_individual_verifications",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 26
          }
        },
        {
          "name": "benchmark_verification_scalability",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 12
          }
        },
        {
          "name": "benchmark_verification_with_errors",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 8
          }
        },
        {
          "name": "benchmark_effect_analysis",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 1,
            "lines": 9
          }
        },
        {
          "name": "generate_complex_rust_for_verification",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 1,
            "lines": 8
          }
        },
        {
          "name": "generate_injection_attempt",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "generate_non_deterministic",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        },
        {
          "name": "generate_resource_intensive",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 4,
            "nesting_max": 1,
            "lines": 14
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./scripts/cross-shell-validator.rs",
      "total_complexity": {
        "cyclomatic": 16,
        "cognitive": 19,
        "nesting_max": 3,
        "lines": 33
      },
      "functions": [
        {
          "name": "ShellTest::run",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 1,
            "lines": 4
          }
        },
        {
          "name": "main",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 10,
            "cognitive": 13,
            "nesting_max": 3,
            "lines": 25
          }
        }
      ],
      "classes": [
        {
          "name": "ShellTest",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./rash-runtime/src/lib.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 0
      },
      "functions": [],
      "classes": []
    },
    {
      "path": "./rash-runtime/build.rs",
      "total_complexity": {
        "cyclomatic": 33,
        "cognitive": 54,
        "nesting_max": 3,
        "lines": 42
      },
      "functions": [
        {
          "name": "main",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 3,
            "cognitive": 3,
            "nesting_max": 0,
            "lines": 10
          }
        },
        {
          "name": "validate_shell_syntax",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 26,
            "cognitive": 44,
            "nesting_max": 2,
            "lines": 22
          }
        },
        {
          "name": "minify_shell",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 4,
            "cognitive": 7,
            "nesting_max": 3,
            "lines": 10
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./rash-tests/src/sandbox.rs",
      "total_complexity": {
        "cyclomatic": 6,
        "cognitive": 6,
        "nesting_max": 0,
        "lines": 14
      },
      "functions": [
        {
          "name": "Sandbox::new",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 1,
            "cognitive": 1,
            "nesting_max": 0,
            "lines": 2
          }
        },
        {
          "name": "Sandbox::run_shell_script",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 2,
            "cognitive": 2,
            "nesting_max": 0,
            "lines": 4
          }
        },
        {
          "name": "Sandbox::temp_path",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        }
      ],
      "classes": [
        {
          "name": "Sandbox",
          "line_start": 1,
          "line_end": 100,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 0
          },
          "methods": []
        }
      ]
    },
    {
      "path": "./rash-tests/src/lib.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 0
      },
      "functions": [],
      "classes": []
    },
    {
      "path": "./target/release/build/rash-runtime-8575b73446660094/out/runtime.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 1
      },
      "functions": [
        {
          "name": "get_runtime",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./target/debug/build/rash-runtime-70a7bd5957f6090a/out/runtime.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 1
      },
      "functions": [
        {
          "name": "get_runtime",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./target/debug/build/rash-runtime-70d7ad748e24ab86/out/runtime.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 1
      },
      "functions": [
        {
          "name": "get_runtime",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./target/debug/build/rash-runtime-ebb082129b44155d/out/runtime.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 1
      },
      "functions": [
        {
          "name": "get_runtime",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./target/min-size/build/rash-runtime-3fe0521997695da0/out/runtime.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 1
      },
      "functions": [
        {
          "name": "get_runtime",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        }
      ],
      "classes": []
    },
    {
      "path": "./target/x86_64-unknown-linux-gnu/min-size/build/rash-runtime-fecdeffda426dd2b/out/runtime.rs",
      "total_complexity": {
        "cyclomatic": 0,
        "cognitive": 0,
        "nesting_max": 0,
        "lines": 1
      },
      "functions": [
        {
          "name": "get_runtime",
          "line_start": 1,
          "line_end": 11,
          "metrics": {
            "cyclomatic": 0,
            "cognitive": 0,
            "nesting_max": 0,
            "lines": 1
          }
        }
      ],
      "classes": []
    }
  ]
}