[workspace]
members = [
    "rash",
    "rash-runtime",
    "rash-mcp",
]
exclude = ["fuzz"]
resolver = "2"

[workspace.dependencies]
syn = { version = "2.0", features = ["full", "extra-traits"] }
quote = "1.0.40"
proc-macro2 = "1.0.95"
serde = { version = "1.0.219", features = ["derive"] }
serde_json = "1.0.140"
anyhow = "1.0.98"
thiserror = "2.0.12"
clap = { version = "4.5.39", features = ["derive"] }
tokio = { version = "1.45.1", features = ["full"] }
tracing = "0.1.41"
tracing-subscriber = "0.3.19"
blake3 = "1.8.2"
once_cell = "1.21.3"
phf = { version = "0.11.3", features = ["macros"] }
tempfile = "3.20.0"
criterion = "0.6"
proptest = "1.6"
rstest = "0.25"
rustyline = "14.0"

[workspace.package]
version = "6.7.0"
edition = "2021"
authors = ["Pragmatic AI Labs"]
license = "MIT"
repository = "https://github.com/paiml/bashrs"
description = "Rust-to-Shell transpiler for deterministic bootstrap scripts"
readme = "README.md"
homepage = "https://github.com/paiml/bashrs"
documentation = "https://docs.rs/bashrs"
keywords = ["shell", "bash", "transpiler", "rust", "scripting"]
categories = ["command-line-utilities", "development-tools", "compilers"]

# Performance and size optimizations (following ripgrep/fd practices)
[profile.release]
opt-level = 'z'           # Size optimization (not 's')
lto = true                # Link-time optimization
codegen-units = 1         # Single unit for better optimization
strip = true              # Remove symbols
panic = 'abort'           # No unwinding machinery

# Optimize dependencies too
[profile.release.package."*"]
opt-level = 'z'           # Dependencies also minimized

# Build scripts minimized
[profile.release.build-override]
opt-level = 'z'           # Build scripts minimized

# Extreme binary size optimization for distribution
[profile.min-size]
inherits = "release"
opt-level = "z"           # Optimize for size
lto = "fat"               # Full link-time optimization
codegen-units = 1         # Single codegen unit
panic = "abort"           # Remove panic unwinding
strip = true              # Strip all symbols

[profile.dev]
debug = true
opt-level = 0

# Fast compilation for development
[profile.dev-fast]
inherits = "dev"
opt-level = 1
incremental = true
codegen-units = 16

# Coverage testing profile (CRITICAL for LLVM coverage)
# Following: docs/specifications/COVERAGE.md
[profile.test]
inherits = "dev"
incremental = false  # CRITICAL: Prevents stale coverage data
opt-level = 0
codegen-units = 1