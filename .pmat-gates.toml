# Bashrs Quality Gate Configuration
# EXTREME TDD - Zero Tolerance for Quality Violations
# Generated by: Claude Code applying paiml-mcp-agent-toolkit standards

[gates]
# Run clippy linter with strict settings
run_clippy = true

# Enforce strict clippy (-D warnings)
clippy_strict = true

# Additional clippy lints for transpiler safety
clippy_additional_lints = [
    "clippy::all",
    "clippy::pedantic",
    "clippy::nursery",
    "clippy::cargo"
]

# Clippy denies for safety-critical code
clippy_deny_lints = [
    "clippy::panic",
    "clippy::unwrap_used",
    "clippy::expect_used",
    "clippy::indexing_slicing",
    "clippy::integer_arithmetic"
]

# Run test suite
run_tests = true

# Test timeout in seconds (transpiler tests should be fast)
test_timeout = 180

# Check code coverage
check_coverage = true

# Minimum coverage percentage (0-100)
min_coverage = 85.0

# Check cyclomatic complexity
check_complexity = true

# Maximum cyclomatic complexity per function
max_complexity = 10

# Maximum cognitive complexity per function
max_cognitive_complexity = 15

# Check for SATD (Self-Admitted Technical Debt)
check_satd = true

# Zero tolerance for SATD
satd_zero_tolerance = true

# Run property-based tests
run_property_tests = true

# Minimum number of property tests required
min_property_tests = 50

# Run ShellCheck on generated scripts
run_shellcheck = true

# ShellCheck severity level
shellcheck_severity = "error"

# Check determinism (byte-identical output)
check_determinism = true

# Determinism test iterations
determinism_iterations = 10

# Check POSIX compliance
check_posix_compliance = true

# Run mutation testing (on critical modules)
run_mutation_tests = false  # Expensive, run manually

# Minimum mutation kill rate when enabled
min_mutation_kill_rate = 0.90

# Performance benchmarks
check_performance = true

# Maximum transpile time (microseconds)
max_transpile_time_us = 50

# Documentation checks
check_documentation = true

# Minimum documentation coverage
min_doc_coverage = 75.0

# Security checks
check_security = true

# Zero unsafe code blocks allowed
max_unsafe_blocks = 0

# Dependency audit
run_cargo_audit = true

# Dependency deny checks
run_cargo_deny = true

# Format checks
check_formatting = true

# Use rustfmt
run_rustfmt = true

# Integration with CI/CD
[ci]
fail_fast = false           # Run all checks even if one fails
parallel_execution = true   # Run checks in parallel where possible
cache_dependencies = true   # Cache for faster CI runs
upload_coverage = true      # Upload to codecov
generate_reports = true     # Generate quality reports

# Pre-commit hook configuration
[pre_commit]
enabled = true
run_fast_tests_only = true  # Only fast tests in pre-commit
skip_slow_checks = true     # Skip mutation testing, full coverage
block_on_satd = true        # Block commits with SATD
block_on_complexity = true  # Block commits with high complexity
block_on_lint = true        # Block commits with lint errors

# Quality scoring weights
[scoring]
complexity_weight = 0.30
coverage_weight = 0.15
satd_weight = 0.25
dead_code_weight = 0.15
documentation_weight = 0.05
performance_weight = 0.10

# Minimum score to pass (0-100)
min_score = 90

# Toyota Way enforcement
[toyota_way]
# Jidoka: Build quality in
enforce_jidoka = true
zero_defects_policy = true

# Hansei: Reflection
require_five_whys = true
document_root_causes = true

# Kaizen: Continuous improvement
track_metrics = true
require_improvement = true

# Genchi Genbutsu: Go and see
require_dogfooding = true
test_on_real_examples = true
